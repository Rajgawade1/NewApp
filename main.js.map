{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/addn-education/addn-education.component.css","webpack:///./src/app/addn-education/addn-education.component.html","webpack:///./src/app/addn-education/addn-education.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/basic-details/basic-details.component.css","webpack:///./src/app/basic-details/basic-details.component.html","webpack:///./src/app/basic-details/basic-details.component.ts","webpack:///./src/app/check-user.service.ts","webpack:///./src/app/common/Globals.ts","webpack:///./src/app/common/common-utility.ts","webpack:///./src/app/common/format-datepicker.ts","webpack:///./src/app/common/service-urls.ts","webpack:///./src/app/data-get.service.ts","webpack:///./src/app/data-submit.service.ts","webpack:///./src/app/declaration/declaration.component.css","webpack:///./src/app/declaration/declaration.component.html","webpack:///./src/app/declaration/declaration.component.ts","webpack:///./src/app/declaration/preview-dialog.html","webpack:///./src/app/education/education.component.css","webpack:///./src/app/education/education.component.html","webpack:///./src/app/education/education.component.ts","webpack:///./src/app/experience/experience.component.css","webpack:///./src/app/experience/experience.component.html","webpack:///./src/app/experience/experience.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/loginmodal/loginmodal.component.css","webpack:///./src/app/loginmodal/loginmodal.component.html","webpack:///./src/app/loginmodal/loginmodal.component.ts","webpack:///./src/app/master-drop-downs.service.ts","webpack:///./src/app/navbar-footer/navbar-footer.component.css","webpack:///./src/app/navbar-footer/navbar-footer.component.html","webpack:///./src/app/navbar-footer/navbar-footer.component.ts","webpack:///./src/app/navbar-header/navbar-header.component.css","webpack:///./src/app/navbar-header/navbar-header.component.html","webpack:///./src/app/navbar-header/navbar-header.component.ts","webpack:///./src/app/not-found/not-found.component.css","webpack:///./src/app/not-found/not-found.component.html","webpack:///./src/app/not-found/not-found.component.ts","webpack:///./src/app/other/other.component.css","webpack:///./src/app/other/other.component.html","webpack:///./src/app/other/other.component.ts","webpack:///./src/app/output/output.component.css","webpack:///./src/app/output/output.component.html","webpack:///./src/app/output/output.component.ts","webpack:///./src/app/personal-details/personal-details.component.css","webpack:///./src/app/personal-details/personal-details.component.html","webpack:///./src/app/personal-details/personal-details.component.ts","webpack:///./src/app/pre-login/pre-login.component.css","webpack:///./src/app/pre-login/pre-login.component.html","webpack:///./src/app/pre-login/pre-login.component.ts","webpack:///./src/app/register.service.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkZG4tZWR1Y2F0aW9uL2FkZG4tZWR1Y2F0aW9uLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<form [formGroup]=\\\"addeduForm\\\" (ngSubmit)=\\\"submitData()\\\">\\n        <mat-card class=\\\"mat-card-data-entry\\\">\\n                <mat-card-header>\\n        \\n                    <!-- <mat-card-title>Shiba Inu</mat-card-title>\\n                            <mat-card-subtitle>Dog Breed</mat-card-subtitle> -->\\n                </mat-card-header>\\n                <mat-card-content>\\n            <div class=\\\"row\\\">\\n                <div *ngFor=\\\"let lang of addeduForm.controls; let i=index\\\">\\n                    <div class=\\\"row\\\" [formGroupName]=\\\"i\\\">\\n                        <input type=\\\"text\\\" placeholder=\\\"First Name\\\" formControlName='userId' hidden>\\n\\n                        <div class=\\\"form-group col-sm-3\\\">\\n                            <mat-form-field>\\n                                <mat-label>Qualification</mat-label>\\n                                <mat-select type=\\\"text\\\" formControlName='degree'>\\n                                    <mat-option value=\\\"null\\\">SELECT</mat-option>\\n                                    <mat-option value=\\\"1\\\">10th</mat-option>\\n                                    <mat-option value=\\\"2\\\">12th</mat-option>\\n                                </mat-select>\\n                            </mat-form-field>\\n                        </div>\\n\\n                        <div class=\\\"form-group col-sm-3\\\">\\n                            <mat-form-field>\\n                                <mat-label>Board / University</mat-label>\\n                                <mat-select type=\\\"text\\\" formControlName='board'>\\n                                    <mat-option value=\\\"null\\\">SELECT</mat-option>\\n                                    <mat-option value=\\\"1\\\">10th</mat-option>\\n                                    <mat-option value=\\\"2\\\">12th</mat-option>\\n                                </mat-select>\\n                            </mat-form-field>\\n                        </div>\\n                        <div class=\\\"form-group col-sm-3\\\">\\n                            <mat-form-field>\\n                                <mat-label>Institute</mat-label>\\n                                <mat-select type=\\\"text\\\" formControlName='institute'>\\n                                    <mat-option value=\\\"null\\\">SELECT</mat-option>\\n                                    <mat-option value=\\\"1\\\">VJTI</mat-option>\\n                                    <mat-option value=\\\"2\\\">SPIT</mat-option>\\n                                </mat-select>\\n                            </mat-form-field>\\n                        </div>\\n\\n                        <div class=\\\"form-group col-sm-3\\\">\\n                            <mat-form-field class=\\\"example-full-width\\\">\\n                                <input matInput type=\\\"number\\\" formControlName='gpa' placeholder=\\\"% / GPA\\\">\\n                            </mat-form-field>\\n                        </div>\\n                        <div class=\\\"form-group col-sm-3\\\">\\n                            <mat-form-field class=\\\"example-full-width\\\">\\n\\n                                <input matInput type=\\\"text\\\" formControlName='speciality'\\n                                    placeholder=\\\"Subject / Speciality\\\">\\n                            </mat-form-field>\\n                        </div>\\n\\n                        <div class=\\\"col-sm-2\\\" *ngIf=\\\"i>0\\\">\\n\\n                            <button (click)=\\\"removeEducation(i)\\\" color=\\\"warn\\\" mat-icon-button=\\\"\\\"\\n                            class=\\\"mat-icon-button mat-button-base mat-warn\\\"><span class=\\\"mat-button-wrapper\\\">\\n                                <mat-icon class=\\\"mat-icon notranslate material-icons mat-icon-no-color\\\" role=\\\"img\\\"\\n                                    aria-hidden=\\\"true\\\">delete</mat-icon>\\n                            </span>\\n                            <div class=\\\"mat-button-ripple mat-ripple mat-button-ripple-round\\\" matripple=\\\"\\\"></div>\\n                            <div class=\\\"mat-button-focus-overlay\\\"></div>\\n                        </button>\\n                        </div>\\n\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"col-sm-12 form-group\\\">\\n\\n                        <button type=\\\"button\\\" (click)=\\\"addNewEducation()\\\" color=\\\"primary\\\" mat-icon-button=\\\"\\\"\\n                        class=\\\"mat-icon-button mat-button-base mat-primary\\\"><span class=\\\"mat-button-wrapper\\\"\\n                            title=\\\"Add Language\\\">\\n                            <mat-icon class=\\\"mat-icon notranslate material-icons mat-icon-no-color\\\" role=\\\"img\\\"\\n                                aria-hidden=\\\"true\\\">add_box</mat-icon>\\n                        </span>\\n                        <div class=\\\"mat-button-ripple mat-ripple mat-button-ripple-round\\\" matripple=\\\"\\\"></div>\\n                        <div class=\\\"mat-button-focus-overlay\\\"></div>\\n                    </button>\\n                </div>\\n            </div>\\n        \\n        </mat-card-content>\\n\\n        <mat-card-actions>\\n\\n            <div class=\\\"text-center\\\">\\n                    <button type=\\\"submit\\\" color=\\\"primary\\\" mat-raised-button=\\\"\\\"\\n                    class=\\\"mat-raised-button mat-button-base mat-primary\\\">\\n                    <span class=\\\"mat-button-wrapper\\\">Save</span>\\n                    <div class=\\\"mat-button-ripple mat-ripple\\\" matripple=\\\"\\\"></div>\\n                    <div class=\\\"mat-button-focus-overlay\\\"></div>\\n                </button>\\n            </div>\\n        </mat-card-actions>\\n   </mat-card>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormGroup, Validators, FormArray } from '@angular/forms';\nimport { DataSubmitService } from '../data-submit.service';\nimport { DataGetService } from '../data-get.service';\nimport { Globals } from '../common/Globals';\nimport { CommonUtility } from '../common/common-utility';\n\n@Component({\n  selector: 'addn-education',\n  templateUrl: './addn-education.component.html',\n  styleUrls: ['./addn-education.component.css']\n})\nexport class AddnEducationComponent implements OnInit {\n    addeduForm:FormArray;\n    userId:string;\n    \n    ngOnInit(){\n      \n        this.addeduForm=this.fb.array([\n            this.addAddnEducation()\n         ]);\n         this.getData();\n        \n    }\n    constructor(private dataSubmitService:DataSubmitService,private fb: FormBuilder,private dataGetService :DataGetService,private globals:Globals,private _utils: CommonUtility){}\n        \n    addAddnEducation(): FormGroup {\n          return  this.fb.group({\n            degree:[null,[Validators.required,]],\n            board:[null,[Validators.required,]],\n            institute:[null,[Validators.required,]],\n            gpa:['',Validators.required],\n            speciality:['',[Validators.required,Validators.minLength(5)]],\n            //isPursuing:['',[Validators.required,Validators.minLength(5)]],\n            isAdditionalCourse:[true,Validators.required],\n            userId:[this.globals.userId,Validators.required],\n        })\n        }\n\n    get educations(){\n          return this.addeduForm as FormArray;\n      }\n      addNewEducation(){\n          this.educations.push(this.addAddnEducation());\n      }\n      removeEducation(index) :void{\n          ((this.addeduForm) as FormArray).removeAt(index);\n       }\n       submitData(){\n          console.log(this.addeduForm.value);\n          this.dataSubmitService.submitqualificationData(this.addeduForm.value).subscribe(\n          data=>{\n                  this.setSuccess(data);\n                  //this.getData();\n               },\n          error=>{\n                  console.log(error);  \n                  this.setError(error)\n          });\n      }\n       getData(){\n          this.dataGetService.getAddEducationInfo(this.addeduForm.value[0].userId).subscribe(\n          data=>{console.log(data);\n                this.setEducationData(data);\n              },\n          error=>{\n                  console.log(error);\n                 \n          });\n      } \n      setEducationData(data) {\n        for (let i = 1; i < data.length; i++){\n            this.educations.push(this.addAddnEducation());\n          }\n          this.addeduForm.patchValue(data);\n      }\n      setSuccess(data){\n            this._utils.openSnackBar(\"Data submitted successfully\",\"OK\");\n          console.log(\"Success\");\n          console.log(data);\n          \n      }\n      setError(data){\n          console.log(\"Error Occured\"+data.error); \n          this.addeduForm.setErrors({});\n      }                           \n      get board(){\n          return this.addeduForm.get('board');\n      } \n       get degree(){ \n          return this.addeduForm.get('degree');\n      }\n       get institute(){ \n          return this.addeduForm.get('institute');\n      }\n       get gpa(){\n          return this.addeduForm.get('gpa');\n      }\n       get speciality(){\n          return this.addeduForm.get('speciality');\n      }\n       get isPursuing(){\n          return this.addeduForm.get('isPursuing');\n      }\n       get isAdditionalCourse(){\n          return this.addeduForm.get('isAdditionalCourse');\n      }\n}\n","module.exports = \"html, body {\\r\\n   height: 100%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7R0FDRyxZQUFZO0FBQ2YiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImh0bWwsIGJvZHkge1xyXG4gICBoZWlnaHQ6IDEwMCU7XHJcbn0iXX0= */\"","module.exports = \"<div>\\n<router-outlet></router-outlet>\\n</div>\\n<!--<navbar-footer></navbar-footer>-->\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Pro Career';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatDatepickerModule,MatNativeDateModule} from '@angular/material';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatMenuModule} from '@angular/material/menu';\n\nimport { AppComponent } from './app.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HomeComponent } from './home/home.component';\nimport { PreLoginComponent } from './pre-login/pre-login.component'; \nimport { NavbarHeaderComponent } from './navbar-header/navbar-header.component';\nimport { NavbarFooterComponent } from './navbar-footer/navbar-footer.component';\nimport { PersonalDetailsComponent } from './personal-details/personal-details.component';\nimport { RouterModule } from '@angular/router';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { BasicDetailsComponent } from './basic-details/basic-details.component';\nimport { EducationComponent } from './education/education.component';\nimport { ExperienceComponent } from './experience/experience.component';\nimport { OtherComponent } from './other/other.component';\nimport { DeclarationComponent, DialogOverviewExampleDialog } from './declaration/declaration.component';\nimport { OutputComponent } from './output/output.component';\nimport { LoginmodalComponent } from './loginmodal/loginmodal.component';\nimport { RegisterComponent } from './register/register.component';\nimport { AddnEducationComponent } from './addn-education/addn-education.component';\nimport { Globals } from './common/Globals';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material';\nimport { CommonUtility } from './common/common-utility';\nimport {MatListModule} from '@angular/material/list';\nimport {MatDialogModule} from '@angular/material/dialog';\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    PreLoginComponent,\n    NavbarHeaderComponent,\n    NavbarFooterComponent,\n    PersonalDetailsComponent,\n    NotFoundComponent,\n    BasicDetailsComponent,\n    EducationComponent,\n    ExperienceComponent,\n    OtherComponent,\n    DeclarationComponent,\n    OutputComponent,\n    LoginmodalComponent,\n    RegisterComponent,\n    AddnEducationComponent,\n    DialogOverviewExampleDialog,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    MatCheckboxModule,\n    MatButtonModule,\n    MatInputModule,\n    MatSelectModule,\n    MatIconModule,\n   MatSnackBarModule,\n   MatDatepickerModule,\n   MatNativeDateModule ,\n   MatCardModule,\n   MatTabsModule,\n   MatToolbarModule,\n   FlexLayoutModule,\n   MatSidenavModule,\n   MatMenuModule,\n   MatGridListModule,\n   MatListModule,\n   MatDialogModule,\n    RouterModule.forRoot([\n      {path:'',component:PreLoginComponent},\n      {path:'login',component:PreLoginComponent},\n      {path:'home',component:HomeComponent},\n      {path:'**',component:NotFoundComponent},\n  ]),\n  ],\n  entryComponents: [ DialogOverviewExampleDialog],\n  providers: [Globals, { provide: MAT_DATE_LOCALE, useValue: 'it' },CommonUtility],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Jhc2ljLWRldGFpbHMvYmFzaWMtZGV0YWlscy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<form [formGroup]=\\\"basicForm\\\" (ngSubmit)=\\\"submitBasicData()\\\">\\n    <mat-card class=\\\"\\\">\\n        <mat-card-header>\\n\\n            <!-- <mat-card-title>Shiba Inu</mat-card-title>\\n            <mat-card-subtitle>Dog Breed</mat-card-subtitle> -->\\n        </mat-card-header>\\n        <mat-card-content>\\n            <div class=\\\"row\\\">\\n\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName='id' hidden>\\n\\n                <div class=\\\"form-group col-sm-7\\\">\\n                    <mat-form-field class=\\\"example-full-width\\\">\\n                        <textarea matInput formControlName='objective' placeholder=\\\"Objective\\\"></textarea>\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"form-group col-sm-6\\\">\\n\\n                    <mat-form-field>\\n                        <mat-label>Domain</mat-label>\\n                        <mat-select formControlName='domain'>\\n                            <mat-option value=\\\"null\\\">SELECT</mat-option>\\n                            <mat-option value=\\\"1\\\">Banking</mat-option>\\n                            <mat-option value=\\\"2\\\">Health Care</mat-option>\\n                        </mat-select>\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"form-group col-sm-6\\\">\\n                    <mat-form-field>\\n                        <mat-label>Sub Domain</mat-label>\\n                        <mat-select formControlName='subDomain'>\\n                            <mat-option value=\\\"null\\\">SELECT</mat-option>\\n                            <mat-option value=\\\"1\\\">Finance</mat-option>\\n                            <mat-option value=\\\"2\\\">IT Care</mat-option>\\n                        </mat-select>\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"form-group col-sm-6\\\">\\n                    <label class=\\\"form-label\\\">Upload Resume</label>\\n                    <input type=\\\"file\\\" class=\\\"form-control\\\" formControlName='resume'>\\n                </div>\\n            </div>\\n        </mat-card-content>\\n        <mat-card-actions>\\n            <div class=\\\"text-center\\\">\\n                <button type=\\\"submit\\\" color=\\\"primary\\\" mat-raised-button=\\\"\\\"\\n                    class=\\\"mat-raised-button mat-button-base mat-primary\\\">\\n                    <span class=\\\"mat-button-wrapper\\\">Save</span>\\n                    <div class=\\\"mat-button-ripple mat-ripple\\\" matripple=\\\"\\\"></div>\\n                    <div class=\\\"mat-button-focus-overlay\\\"></div>\\n                </button>\\n            </div>\\n\\n\\n        </mat-card-actions>\\n\\n\\n\\n    </mat-card>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, AbstractControl, Validators } from '@angular/forms';\nimport { DataSubmitService } from '../data-submit.service';\nimport { DataGetService } from '../data-get.service';\nimport { Globals } from '../common/Globals';\nimport { MatSnackBar } from '@angular/material';\n\n@Component({\n  selector: 'basic-details',\n  templateUrl: './basic-details.component.html',\n  styleUrls: ['./basic-details.component.css']\n})\nexport class BasicDetailsComponent implements OnInit {\n  basicForm:AbstractControl;\n\n  constructor(private fb:FormBuilder,private dataSubmitService:DataSubmitService,\n    private dataGetService: DataGetService,private globals:Globals,private _snackBar:MatSnackBar ) { }\n\n  ngOnInit() {\n    this.basicForm=this.fb.group({\n      domain:[null,Validators.required],\n      subDomain:[null,Validators.required],\n      objective:['',[Validators.required,Validators.minLength(10)]],\n      resume:['',Validators.required],\n      id:[this.globals.userId,Validators.required]\n    });\n    this.getData();\n  }\n\n  submitBasicData(){\n      console.log(this.basicForm.value);\n      this.dataSubmitService.submitBasicData(this.basicForm.value).subscribe(\n      data=>{\n              this.setSuccess(data);\n              this.getData();\n           },\n      error=>{\n              console.log(error);  \n              this.setError(error);\n              this.getData();\n      });\n  }\n\n  getData(){\n    this.dataGetService.getBaiscInfo(this.basicForm.value.id).subscribe(\n    data=>{console.log(data);\n          this.setBasicData(data);\n        },\n    error=>{\n            this.globals.isBasicCreated=false;\n            console.log(error);\n    });\n} \nsetBasicData(data) {\n    this.globals.isBasicCreated=true;\n    this.basicForm.patchValue(data);\n}\nsetSuccess(data){\n    this.openSnackBar(\"Data submiteed successfully\",\"OK\");\n    console.log(\"Success\");\n    console.log(data);\n    \n}\nsetError(data){\n    console.log(\"Error Occured\"+data.error); \n  //  this.basicForm.setErrors({});\n}\nopenSnackBar(message:string,action:string) {\n  this._snackBar.open(message, action, {\n    duration: 2000,\n  });\n}\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient,HttpHeaders } from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport * as basrUrls from './common/service-urls'; \n@Injectable({\n  providedIn: 'root'\n})\nexport class CheckUserService {\n\n     posts:any[];\n      //baseUrl=\"http://http://100.83.14.249:8000\";\n     baseUrl=basrUrls.baseUrl;\n     httpHeaders=new HttpHeaders({'Content-Type':'application/json'});\n        data = [{\"title\":\"Lion king\"}];\n    \n    constructor(private http:HttpClient){}\n    \n    getMovies():Observable<any>{\n        return this.http.get(this.baseUrl+'/movies/',{headers:this.httpHeaders});\n       \n    }\n     getRecruiters():Observable<any>{\n            return this.http.get(this.baseUrl+'/movies/',{headers:this.httpHeaders});\n    }\n     getJobs():Observable<any>{\n            return this.http.get(this.baseUrl+'/movies/',{headers:this.httpHeaders});\n    }\n     getCareers():Observable<any>{\n            return this.http.get(this.baseUrl+'/movies/',{headers:this.httpHeaders});\n    }\n    getMCQ():Observable<any>{\n            return this.http.get(this.baseUrl+'/movies/',{headers:this.httpHeaders});\n    }\n    getCVs():Observable<any>{\n            return this.http.get(this.baseUrl+'/movies/',{headers:this.httpHeaders});\n    }\n    getPosts():Observable<any>{\n        let url=\"https://jsonplaceholder.typicode.com/posts\";\n        return this.http.get(url)   \n       \n    }\n    \n    \n\n    getListOfRecruiters() {\n      return [{\"title\":\"TCS\",\"jobs\":1},{\"title\":\"Infosys\",\"jobs\":6},{\"title\":\"IBM\",\"jobs\":8},{\"title\":\"HDFC Bank\",\"jobs\":6},];\n  }\n}\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpHeaders } from '@angular/common/http';\r\n@Injectable()\r\n\r\nexport class Globals {\r\n    private _expCreated: boolean;\r\n    private _persInfoCreated: boolean;\r\n    private _userId: number;\r\n    private _token: string;\r\n    private _email: string;\r\n    private _contentType: string;\r\n    private _Authorization: string;\r\n    private _isBasicCreated: boolean;\r\n    private _isDeclrCreated: boolean;\r\n    \r\n\r\n\r\n\r\n    get isDeclrCreated(): boolean {\r\n        return this._isDeclrCreated;\r\n    }\r\n    set isDeclrCreated(isBasicCreated: boolean) {\r\n        this._isDeclrCreated = isBasicCreated;\r\n    }\r\n    get userId(): number {\r\n        return this._userId;\r\n    }\r\n    set userId(userId: number) {\r\n        this._userId = userId;\r\n    }\r\n    get isBasicCreated(): boolean {\r\n        return this._isBasicCreated;\r\n    }\r\n    set isBasicCreated(isBasicCreated: boolean) {\r\n        this._isBasicCreated = isBasicCreated;\r\n    }\r\n    get expCreated(): boolean {\r\n        return this._expCreated;\r\n    }\r\n    set expCreated(expCreated: boolean) {\r\n        this._expCreated = expCreated;\r\n    }\r\n\r\n    get token(): string {\r\n        return this._token;\r\n    }\r\n    set token(_token: string) {\r\n        this._token = _token;\r\n    }\r\n\r\n    get email(): string {\r\n        return this._email;\r\n    }\r\n    set email(email: string) {\r\n        this._email = email;\r\n    }\r\n    get Authorization(): string {\r\n        return this._Authorization;\r\n    }\r\n    set Authorization(email: string) {\r\n        this._Authorization = email;\r\n    }    \r\n    set contentType(contentType: string) {\r\n        this._contentType = \"application/json\";\r\n    }\r\n\r\n\r\n}","import { Injectable } from \"@angular/core\";\r\nimport { MatSnackBar } from '@angular/material';\r\n@Injectable()\r\n\r\nexport class CommonUtility{\r\n    constructor(private _snackBar:MatSnackBar){}\r\n    openSnackBar(message:string,action:string) {\r\n        this._snackBar.open(message, action, {\r\n          duration: 2000,\r\n        });\r\n    }\r\n}","import { NativeDateAdapter, DateAdapter, MAT_DATE_FORMATS, MatDateFormats } from \"@angular/material\";\r\nimport { FormControl } from '@angular/forms';\r\n\r\n\r\nexport class AppDateAdapter extends NativeDateAdapter {\r\n\r\n    parse(value: any): Date | null {\r\n        if ((typeof value === 'string') && (value.indexOf('/') > -1)) {\r\n          const str = value.split('/');\r\n          const year = Number(str[2]);\r\n          const month = Number(str[1]) - 1;\r\n          const date = Number(str[0]);\r\n          return new Date(year, month, date);\r\n        }\r\n        const timestamp = typeof value === 'number' ? value : Date.parse(value);\r\n        return isNaN(timestamp) ? null : new Date(timestamp);\r\n      }\r\n   format(date: Date, displayFormat: string): string {\r\n       if (displayFormat == \"input\") {\r\n          let day = date.getDate();\r\n          let month = date.getMonth() + 1;\r\n          let year = date.getFullYear();\r\n          return  year+'-'+ this._to2digit(month) + '-'+this._to2digit(day);\r\n       } else if (displayFormat == \"inputMonth\") {\r\n          let month = date.getMonth() + 1;\r\n          let year = date.getFullYear();\r\n          return  this._to2digit(month) + '/' + year;\r\n       } else {\r\n           return date.toDateString();\r\n       }\r\n   }\r\n\r\n   private _to2digit(n: number) {\r\n       return ('00' + n).slice(-2);\r\n   } \r\n}\r\nexport const APP_DATE_FORMATS =\r\n{\r\n   parse: {\r\n       dateInput: {month: 'short', year: 'numeric', day: 'numeric'}\r\n   },\r\n   display: {\r\n       // dateInput: { month: 'short', year: 'numeric', day: 'numeric' },\r\n       dateInput: 'input',\r\n       // monthYearLabel: { month: 'short', year: 'numeric', day: 'numeric' },\r\n       monthYearLabel: 'inputMonth',\r\n       dateA11yLabel: {year: 'numeric', month: 'long', day: 'numeric'},\r\n       monthYearA11yLabel: {year: 'numeric', month: 'long'},\r\n   }\r\n}","import { HttpClient,HttpHeaders } from '@angular/common/http';\r\n\r\nexport const baseUrl=\"http://54.169.145.13\";\r\n//export const baseUrl=\"http://192.168.0.101:8000\";\r\nexport const httpHeaders=new HttpHeaders({'Content-Type':'application/json',\"Authorization\":\"Token ABC\"});","import { Injectable } from '@angular/core';\nimport { HttpClient,HttpHeaders } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport {AppError} from './common/app-error';\nimport * as basrUrls from './common/service-urls'; \nimport { Globals } from './common/Globals';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataGetService {\n  baseUrl=basrUrls.baseUrl;\n  //httpHeaders=basrUrls.httpHeaders;\n  httpHeaders=new HttpHeaders({'Content-Type':'application/json',\"Authorization\":\"Token \"+this.globals.token});\n \nconstructor(private http:HttpClient,private globals:Globals){}\n getPinfoData(userId):Observable<any>{\n     return this.http.get(this.baseUrl+'/personalinfo/'+userId+'/',{headers:this.httpHeaders})   \n }\n getBaiscInfo(userId):Observable<any>{\n  return this.http.get(this.baseUrl+'/otherinfo/'+userId+'/',{headers:this.httpHeaders})   \n}\ngetDeclrInfo(userId):Observable<any>{\n  return this.http.get(this.baseUrl+'/declaration/'+userId+'/',{headers:this.httpHeaders})   \n}\n\ngetEducationInfo(userId):Observable<any>{\n  return this.http.get(this.baseUrl+'/qualification/?userId='+userId+'&isAdditionalCourse=False',{headers:this.httpHeaders})   \n}\ngetAddEducationInfo(userId):Observable<any>{\n  return this.http.get(this.baseUrl+'/qualification/?userId='+userId+'&isAdditionalCourse=True',{headers:this.httpHeaders})   \n} \n\ngetAddnEducationInfo(userId):Observable<any>{\n  return this.http.get(this.baseUrl+'/addnEducationInfo/'+userId+'/',{headers:this.httpHeaders})   \n}\ngetExperienceInfo(userId):Observable<any>{\n  return this.http.get(this.baseUrl+'/experience/?userId='+userId,{headers:this.httpHeaders})   \n}\n \n}\n","import { Injectable, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport { AppError } from './common/app-error';\nimport * as basrUrls from './common/service-urls';\nimport { Globals } from './common/Globals';\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataSubmitService implements OnInit{\n  baseUrl = basrUrls.baseUrl;\n  httpHeaders=new HttpHeaders({'Content-Type':'application/json',\"Authorization\":\"Token \"+this.globals.token});\n  httpHeaders1=new HttpHeaders({\"Content-Type\": \"application/pdf\"});\n  ngOnInit(){\n   \n  }\n  constructor(private http: HttpClient,private globals:Globals) { }\n\n\n  submitBasicData(basicData): Observable<any> {\n    if(this.globals.isBasicCreated){\n      return this.http.put(this.baseUrl + '/otherinfo/' + basicData.id + '/', basicData, { headers: this.httpHeaders }).pipe(\n        retry(0),\n        catchError(this.handleError));\n    }  else{\n      return this.http.post(this.baseUrl + '/otherinfo/', basicData, { headers: this.httpHeaders }).pipe(\n        retry(0),\n        catchError(this.handleError));\n    }\n    \n  }\n  submitDeclrData(basicData): Observable<any> {\n    if(this.globals.isBasicCreated){\n      return this.http.put(this.baseUrl + '/declaration/' + basicData.id + '/', basicData, { headers: this.httpHeaders }).pipe(\n        retry(0),\n        catchError(this.handleError));\n    }  else{\n      return this.http.post(this.baseUrl + '/declaration/', basicData, { headers: this.httpHeaders }).pipe(\n        retry(0),\n        catchError(this.handleError));\n    }\n    \n  }\n\n  generateResume(resumeData):Observable<any>{\n    //return this.http.post(this.baseUrl+'/generate_resume/',resumeData,{headers:this.httpHeaders1},)   \n    return this.http.get(this.baseUrl+'/generate_resume/?userId=9',{headers:this.httpHeaders1},)   \n  }\n  submitPersoanlData(personalData): Observable<any> {\n    return this.http.put(this.baseUrl + '/personalinfo/'+personalData.id+ '/', personalData, { headers: this.httpHeaders }).pipe(\n      retry(0),\n      catchError(this.handleError)\n    );\n  }  \n  submitqualificationData(qualificationData): Observable<any> {\n      return this.http.post(this.baseUrl + '/qualification/', qualificationData, { headers: this.httpHeaders }).pipe(\n        retry(0),\n        catchError(this.handleError)\n      );\n  }\n  submitExperiencenData(qualificationData): Observable<any> {\n      return this.http.post(this.baseUrl + '/experience/', qualificationData, { headers: this.httpHeaders }).pipe(\n        retry(0),\n        catchError(this.handleError)\n      );\n  }\n  handleError(error) {\n    console.log(error);\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      errorMessage = `Error: ${error.error.message}`;\n    } else {\n      errorMessage = error.error;\n    }\n    window.alert(JSON.stringify(errorMessage));\n    return throwError(errorMessage);\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RlY2xhcmF0aW9uL2RlY2xhcmF0aW9uLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<form [formGroup]=\\\"declrForm\\\" (ngSubmit)=\\\"submitData()\\\">\\n    <mat-card class=\\\"mat-card-data-entry\\\">\\n        <mat-card-header>\\n        </mat-card-header>\\n        <mat-card-content>\\n            <div class=\\\"row\\\">\\n\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName='id' hidden>\\n                <div class=\\\"form-group col-sm-3\\\">\\n                    <mat-form-field>\\n                        <mat-label>Company</mat-label>\\n                        <mat-select type=\\\"text\\\" formControlName='rating'>\\n                            <mat-option value=\\\"null\\\">Rating</mat-option>\\n                            <mat-option value=\\\"1\\\">1</mat-option>\\n                            <mat-option value=\\\"2\\\">2</mat-option>\\n                            <mat-option value=\\\"3\\\">3</mat-option>\\n                            <mat-option value=\\\"4\\\">4</mat-option>\\n                            <mat-option value=\\\"5\\\">5</mat-option>\\n                        </mat-select>\\n                    </mat-form-field>\\n                </div>\\n\\n                <div class=\\\"form-group col-sm-3\\\">\\n                    <mat-form-field class=\\\"example-full-width\\\">\\n                        <textarea matInput formControlName='suggestions'\\n                            placeholder=\\\"Roles & Responsibilities\\\"></textarea>\\n                    </mat-form-field>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"form-group col-sm-1\\\">\\n                    <mat-checkbox type=\\\"checkbox\\\" value=\\\"mat-option1\\\" formControlName='agree'>\\n                    </mat-checkbox>\\n                </div>\\n                I hereby declare that the\\n                details furnished above are true and correct to the best of my knowledge<br> and belief and I\\n                undertake to inform you of any changes therein, immediately.\\n            </div>\\n\\n        </mat-card-content>\\n        <mat-card-actions>\\n            <div class=\\\"text-center\\\">\\n                    <button type=\\\"button\\\" color=\\\"primary\\\" mat-raised-button=\\\"\\\"\\n                    class=\\\"mat-raised-button mat-button-base mat-primary\\\" (click)=\\\"openDialog()\\\">\\n                    <span class=\\\"mat-button-wrapper\\\">Preview</span>\\n                    <div class=\\\"mat-button-ripple mat-ripple\\\" matripple=\\\"\\\"></div>\\n                    <div class=\\\"mat-button-focus-overlay\\\"></div>\\n                </button>\\n                <button type=\\\"submit\\\" color=\\\"primary\\\" mat-raised-button=\\\"\\\"\\n                    class=\\\"mat-raised-button mat-button-base mat-primary\\\">\\n                    <span class=\\\"mat-button-wrapper\\\">Save</span>\\n                    <div class=\\\"mat-button-ripple mat-ripple\\\" matripple=\\\"\\\"></div>\\n                    <div class=\\\"mat-button-focus-overlay\\\"></div>\\n                </button>\\n            </div>\\n        </mat-card-actions>\\n\\n    </mat-card>\\n\\n   \\n\\n</form>\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { Validators, AbstractControl, FormBuilder } from '@angular/forms';\nimport { DataGetService } from '../data-get.service';\nimport { Globals } from '../common/Globals';\nimport { MatSnackBar } from '@angular/material';\nimport { DataSubmitService } from '../data-submit.service';\nimport { CommonUtility } from '../common/common-utility';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\n\n\n@Component({\n  selector: 'declaration',\n  templateUrl: './declaration.component.html',\n  styleUrls: ['./declaration.component.css']\n})\nexport class DeclarationComponent implements OnInit {\n\n  declrForm:AbstractControl;\n  constructor(private fb:FormBuilder,private dataSubmitService:DataSubmitService,\n    private dataGetService: DataGetService,private globals:Globals,private _snackBar:MatSnackBar,private _utils:CommonUtility,public dialog: MatDialog ) { }\n    animal: string;\n    name: string;\n  \n   \n  ngOnInit() {\n    this.declrForm=this.fb.group({\n      rating:['',Validators.required],\n      suggestions:['',Validators.required],\n      agree:['',Validators.required],\n      id:[this.globals.userId,Validators.required]\n    });\n    this.getData();\n  }\n  submitData(){\n    console.log(this.declrForm.value);\n    this.dataSubmitService.submitDeclrData(this.declrForm.value).subscribe(\n    data=>{\n            this.setSuccess(data);\n            this.getData();\n         },\n    error=>{\n            console.log(error);  \n            this.setError(error);\n            this.getData();\n    });\n}\n\ngetData(){\n  this.dataGetService.getDeclrInfo(this.declrForm.value.id).subscribe(\n  data=>{console.log(data);\n        this.setDeclData(data);\n      },\n  error=>{\n          this.globals.isBasicCreated=false;\n          console.log(error);\n  });\n} \nsetDeclData(data) {\n  this.globals.isDeclrCreated=true;\n  this.declrForm.patchValue(data);\n}\nsetSuccess(data){\n  this._utils.openSnackBar(\"Data submiteed successfully\",\"OK\");\n  console.log(\"Success\");\n  console.log(data);\n  \n}\nsetError(data){\n  console.log(\"Error Occured\"+data.error);\n}\nopenDialog(): void {\n  const dialogRef = this.dialog.open(DialogOverviewExampleDialog, {\n    width: '450px',\n  });\n\n  dialogRef.afterClosed().subscribe(result => {\n    console.log('The dialog was closed');\n  });\n}\n}\n\n@Component({\n  selector: 'dialog-overview-example-dialog',\n  templateUrl: 'preview-dialog.html',\n})\nexport class DialogOverviewExampleDialog {\n\n  constructor(\n    public dialogRef: MatDialogRef<DialogOverviewExampleDialog>,\n    @Inject(MAT_DIALOG_DATA) public data: '') {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n","module.exports = \"<div mat-dialog-content>\\r\\n  <mat-card class=\\\"mat-card-data-entry\\\">\\r\\n    <mat-card-header>\\r\\n      Preview of your resume\\r\\n    </mat-card-header>\\r\\n    <mat-card-content>\\r\\n      <mat-label>Rajaram Gawade</mat-label>\\r\\n      <mat-label>Rajaram Gawade</mat-label>\\r\\n      <mat-label>Rajaram Gawade</mat-label>\\r\\n\\r\\n    </mat-card-content>\\r\\n  </mat-card>\\r\\n  <mat-card-actions>\\r\\n\\r\\n  </mat-card-actions>\\r\\n</div>\\r\\n<div mat-dialog-actions>\\r\\n\\r\\n  <button type=\\\"button\\\" mat-button  >Ok</button>\\r\\n  <button type=\\\"button\\\" mat-button (click)=\\\"onNoClick()\\\" cdkFocusInitial>Close</button>\\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VkdWNhdGlvbi9lZHVjYXRpb24uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<form [formGroup]=\\\"educationForm\\\" (ngSubmit)=\\\"submitData()\\\">\\n    <mat-card class=\\\"\\\">\\n        <mat-card-header>\\n\\n            <!-- <mat-card-title>Shiba Inu</mat-card-title>\\n                    <mat-card-subtitle>Dog Breed</mat-card-subtitle> -->\\n        </mat-card-header>\\n        <mat-card-content>\\n            <div class=\\\"row\\\">\\n                <div *ngFor=\\\"let lang of educationForm.controls; let i=index\\\">\\n                    <div class=\\\"row\\\" [formGroupName]=\\\"i\\\">\\n                        <input type=\\\"text\\\" placeholder=\\\"First Name\\\" formControlName='userId' hidden>\\n                        <div class=\\\"form-group col-sm-2\\\">\\n                            <mat-form-field>\\n                                <mat-label>Qualification</mat-label>\\n                                <mat-select type=\\\"text\\\" formControlName='degree'>\\n                                    <mat-option value=\\\"null\\\">SELECT</mat-option>\\n                                    <mat-option value=\\\"1\\\">10th</mat-option>\\n                                    <mat-option value=\\\"2\\\">12th</mat-option>\\n                                </mat-select>\\n                            </mat-form-field>\\n                        </div>\\n\\n                        <div class=\\\"form-group col-sm-2\\\">\\n                            <mat-form-field>\\n                                <mat-label>Board / University</mat-label>\\n                                <mat-select type=\\\"text\\\" formControlName='board'>\\n                                    <mat-option value=\\\"null\\\">SELECT</mat-option>\\n                                    <mat-option value=\\\"1\\\">10th</mat-option>\\n                                    <mat-option value=\\\"2\\\">12th</mat-option>\\n                                </mat-select>\\n                            </mat-form-field>\\n                        </div>\\n\\n                        <div class=\\\"form-group col-sm-2\\\">\\n                            <mat-form-field class=\\\"example-full-width\\\">\\n                                <!-- <input matInput type=\\\"date\\\" formControlName='startDate' placeholder=\\\"Start Date\\\"> -->\\n                                <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Start Date\\\"\\n                                    formControlName='startDate'>\\n                                <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                                <mat-datepicker #picker></mat-datepicker>\\n\\n                            </mat-form-field>\\n                        </div>\\n\\n                        <div class=\\\"form-group col-sm-2\\\">\\n                            <mat-form-field class=\\\"example-full-width\\\">\\n                                <!-- <input matInput type=\\\"date\\\" formControlName='startDate' placeholder=\\\"Start Date\\\"> -->\\n                                <input matInput [matDatepicker]=\\\"picker1\\\" placeholder=\\\"End Date\\\"\\n                                    formControlName='endDate'>\\n                                <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\n                                <mat-datepicker #picker1></mat-datepicker>\\n                            </mat-form-field>\\n                        </div>\\n                        <div class=\\\"form-group col-sm-2\\\">\\n                            <mat-form-field>\\n                                <mat-label>Institute</mat-label>\\n                                <mat-select type=\\\"text\\\" formControlName='institute'>\\n                                    <mat-option value=\\\"null\\\">SELECT</mat-option>\\n                                    <mat-option value=\\\"1\\\">VJTI</mat-option>\\n                                    <mat-option value=\\\"2\\\">SPIT</mat-option>\\n                                </mat-select>\\n                            </mat-form-field>\\n                        </div>\\n\\n                        <div class=\\\"form-group col-sm-2\\\">\\n                            <mat-form-field class=\\\"example-full-width\\\">\\n                                <input matInput type=\\\"number\\\" formControlName='gpa' placeholder=\\\"% / GPA\\\">\\n                            </mat-form-field>\\n                        </div>\\n                        <div class=\\\"form-group col-sm-2\\\">\\n                            <mat-form-field class=\\\"example-full-width\\\">\\n\\n                                <input matInput type=\\\"text\\\" formControlName='speciality'\\n                                    placeholder=\\\"Subject / Speciality\\\">\\n                            </mat-form-field>\\n                        </div>\\n\\n                        <div class=\\\"col-sm-3\\\" *ngIf=\\\"i>0\\\">\\n                            <!-- <button class=\\\"btn btn-sm btn-danger pull-right\\\" type=\\\"button\\\" (click)=\\\"removeEducation(i)\\\">\\n                                <i class=\\\"material-icons md-44\\\">delete</i>\\n                            </button> -->\\n                            <button (click)=\\\"removeEducation(i)\\\" color=\\\"warn\\\" mat-icon-button=\\\"\\\"\\n                                class=\\\"mat-icon-button mat-button-base mat-warn\\\"><span class=\\\"mat-button-wrapper\\\">\\n                                    <mat-icon class=\\\"mat-icon notranslate material-icons mat-icon-no-color\\\" role=\\\"img\\\"\\n                                        aria-hidden=\\\"true\\\">delete</mat-icon>\\n                                </span>\\n                                <div class=\\\"mat-button-ripple mat-ripple mat-button-ripple-round\\\" matripple=\\\"\\\"></div>\\n                                <div class=\\\"mat-button-focus-overlay\\\"></div>\\n                            </button>\\n                        </div>\\n\\n                    </div>\\n                </div>\\n                <hr>\\n                <div class=\\\"col-sm-12 form-group\\\">\\n                    <button type=\\\"button\\\" (click)=\\\"addNewEducation()\\\" color=\\\"primary\\\" mat-icon-button=\\\"\\\"\\n                        class=\\\"mat-icon-button mat-button-base mat-primary\\\"><span class=\\\"mat-button-wrapper\\\"\\n                            title=\\\"Add Education\\\">\\n                            <mat-icon class=\\\"mat-icon notranslate material-icons mat-icon-no-color\\\" role=\\\"img\\\"\\n                                aria-hidden=\\\"true\\\">add_box</mat-icon>\\n                        </span>\\n                        <div class=\\\"mat-button-ripple mat-ripple mat-button-ripple-round\\\" matripple=\\\"\\\"></div>\\n                        <div class=\\\"mat-button-focus-overlay\\\"></div>\\n                    </button>\\n                </div>\\n            </div>\\n\\n        </mat-card-content>\\n        <mat-card-actions>\\n\\n            <div class=\\\"text-center\\\">\\n                    <button type=\\\"submit\\\" color=\\\"primary\\\" mat-raised-button=\\\"\\\"\\n                    class=\\\"mat-raised-button mat-button-base mat-primary\\\">\\n                    <span class=\\\"mat-button-wrapper\\\">Save</span>\\n                    <div class=\\\"mat-button-ripple mat-ripple\\\" matripple=\\\"\\\"></div>\\n                    <div class=\\\"mat-button-focus-overlay\\\"></div>\\n                </button>\\n            </div>\\n            <div *ngFor=\\\"let item of errorData | keyvalue\\\">\\n                <div class=\\\"invalid-feedback d-inline \\\">\\n                    Eroor: {{item.value}}\\n                </div>\\n            </div>\\n        </mat-card-actions>\\n    </mat-card>\\n\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormArray, FormBuilder, AbstractControl } from '@angular/forms';\nimport { DataSubmitService } from '../data-submit.service';\nimport { DataGetService } from '../data-get.service';\nimport { MAT_DATE_LOCALE, MatSnackBar } from '@angular/material';\nimport { DateAdapter, MAT_DATE_FORMATS } from '@angular/material/core';\nimport { AppDateAdapter, APP_DATE_FORMATS } from '../common/format-datepicker';\nimport { Globals } from '../common/Globals';\nimport { CommonUtility } from '../common/common-utility';\n@Component({\n    selector: 'education',\n    templateUrl: './education.component.html',\n    styleUrls: ['./education.component.css'],\n    providers: [\n        {\n            provide: DateAdapter, useClass: AppDateAdapter\n        },\n        {\n            provide: MAT_DATE_FORMATS, useValue: APP_DATE_FORMATS\n        }\n    ]\n})\nexport class EducationComponent implements OnInit {\n\n    educationForm: FormArray;\n    userId: string;\n    errorData: any\n    ngOnInit() {\n        this.educationForm = this.fb.array([\n            this.addEducation()\n        ]);\n        this.getData();\n\n    }\n    constructor(private dataSubmitService: DataSubmitService, private fb: FormBuilder, private dataGetService: DataGetService, private _globals: Globals, private _snackBar: MatSnackBar, private _utils: CommonUtility) { }\n    addEducation(): FormGroup {\n        return this.fb.group({\n            degree: [null, [Validators.required,]],\n            board: [null, [Validators.required,]],\n            institute: [null, [Validators.required,]],\n            gpa: ['', Validators.required],\n            speciality: ['', [Validators.required, Validators.minLength(5)]],\n            startDate: ['', Validators.required],\n            endDate: ['', [Validators.required]],\n            //isPursuing:['',[Validators.required,Validators.minLength(5)]],\n            isAdditionalCourse: [false, Validators.required],\n            userId: [this._globals.userId, Validators.required],\n        })\n    }\n\n    get educations() {\n        return this.educationForm as FormArray;\n    }\n    addNewEducation() {\n        this.educations.push(this.addEducation());\n    }\n    removeEducation(index): void {\n        ((this.educationForm) as FormArray).removeAt(index);\n    }\n    submitData() {\n        console.log(this.educationForm.value);\n        this.dataSubmitService.submitqualificationData(this.educationForm.value).subscribe(\n            data => {\n                this.setSuccess(data);\n                // this.getData();\n            },\n            error => {\n                console.log(error);\n                this.setError(error);\n            });\n    }\n    getData() {\n        this.dataGetService.getEducationInfo(this.educationForm.value[0].userId).subscribe(\n            data => {\n                console.log(data);\n                this.setEducationData(data);\n            },\n            error => {\n                console.log(error);\n\n            });\n    }\n    setEducationData(data) {\n        for (let i = 1; i < data.length; i++) {\n            this.educations.push(this.addEducation());\n        }\n        this.educationForm.patchValue(data);\n    }\n    setSuccess(data) {\n        this._utils.openSnackBar(\"Data submitted successfully\", \"OK\");\n        console.log(\"Success\");\n        console.log(data);\n\n    }\n\n    setError(data) {\n        console.log(\"Error Occured\" + data);\n        //this.educationForm.setErrors({});\n        this.errorData = data[0];\n    }\n\n    get board() {\n        return this.educationForm.get('board');\n    }\n    get degree() {\n        return this.educationForm.get('degree');\n    }\n    get institute() {\n        return this.educationForm.get('institute');\n    }\n    get gpa() {\n        return this.educationForm.get('gpa');\n    }\n\n    get speciality() {\n        return this.educationForm.get('speciality');\n    }\n    get startDate() {\n        return this.educationForm.get('startDate');\n    }\n    get endDate() {\n        return this.educationForm.get('endDate');\n    }\n    get isPursuing() {\n        return this.educationForm.get('isPursuing');\n    }\n    get isAdditionalCourse() {\n        return this.educationForm.get('isAdditionalCourse');\n    }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2V4cGVyaWVuY2UvZXhwZXJpZW5jZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<form [formGroup]=\\\"addExprForm\\\" (ngSubmit)=\\\"submitData()\\\">\\n    <mat-card class=\\\"mat-card-data-entry\\\">\\n        <mat-card-header>\\n\\n            <!-- <mat-card-title>Shiba Inu</mat-card-title>\\n                            <mat-card-subtitle>Dog Breed</mat-card-subtitle> -->\\n        </mat-card-header>\\n        <mat-card-content>\\n            <div class=\\\"row\\\">\\n                <div *ngFor=\\\"let lang of addExprForm.controls; let i=index\\\">\\n                    <div class=\\\"row\\\" [formGroupName]=\\\"i\\\">\\n\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName='userId' hidden>\\n                        <div class=\\\"form-group col-sm-3\\\">\\n                            <mat-form-field>\\n                                <mat-label>Company</mat-label>\\n                                <mat-select type=\\\"text\\\" formControlName='company'>\\n                                    <mat-option value=\\\"null\\\">SELECT</mat-option>\\n                                    <mat-option value=\\\"1\\\">Google</mat-option>\\n                                    <mat-option value=\\\"2\\\">Microsoft</mat-option>\\n                                </mat-select>\\n                            </mat-form-field>\\n                        </div>\\n\\n                        <div class=\\\"form-group col-sm-2\\\">\\n                            <mat-form-field>\\n                                <mat-label>Designation</mat-label>\\n                                <mat-select matInput formControlName='designation'>\\n                                    <mat-option value=\\\"null\\\" selected>SELECT</mat-option>\\n                                    <mat-option *ngFor=\\\"let designation of designationMatser\\\" [value]=\\\"designation.mid\\\">\\n                                        {{designation.mvalue}}</mat-option>\\n                                </mat-select>\\n                            </mat-form-field>\\n                        </div>\\n\\n\\n                        <div class=\\\"form-check form-check-inline\\\">\\n\\n                            <mat-checkbox type=\\\"checkbox\\\" value=\\\"mat-option1\\\" formControlName='isCurrentlyWorking'>Is\\n                                Current Job\\n                            </mat-checkbox>\\n\\n                        </div>\\n                        <div class=\\\"form-group col-sm-3\\\">\\n                            <mat-form-field class=\\\"example-full-width\\\">\\n                                <input matInput type=\\\"date\\\" formControlName='startDate' placeholder=\\\"Start Date\\\">\\n                            </mat-form-field>\\n                        </div>\\n\\n\\n\\n\\n                        <div class=\\\"form-group col-sm-3\\\">\\n                            <mat-form-field class=\\\"example-full-width\\\">\\n                                <input matInput type=\\\"date\\\" formControlName='endDate' placeholder=\\\"End Data\\\">\\n                            </mat-form-field>\\n                        </div>\\n\\n                        <div class=\\\"form-group col-sm-3\\\">\\n                            <mat-form-field class=\\\"example-full-width\\\">\\n                                <textarea matInput formControlName='responsibilites'\\n                                    placeholder=\\\"Roles & Responsibilities\\\"></textarea>\\n                        </mat-form-field>\\n\\n                        </div>\\n                        <div class=\\\"col-sm-3\\\" *ngIf=\\\"i>0\\\">\\n\\n                            <button (click)=\\\"removeExperience(i)\\\" color=\\\"warn\\\" mat-icon-button=\\\"\\\"\\n                                class=\\\"mat-icon-button mat-button-base mat-warn\\\"><span class=\\\"mat-button-wrapper\\\">\\n                                    <mat-icon class=\\\"mat-icon notranslate material-icons mat-icon-no-color\\\" role=\\\"img\\\"\\n                                        aria-hidden=\\\"true\\\">delete</mat-icon>\\n                                </span>\\n                                <div class=\\\"mat-button-ripple mat-ripple mat-button-ripple-round\\\" matripple=\\\"\\\"></div>\\n                                <div class=\\\"mat-button-focus-overlay\\\"></div>\\n                            </button>\\n                        </div>\\n                    </div>\\n\\n                </div>\\n                <div class=\\\"col-sm-12 form-group\\\">\\n                    <button type=\\\"button\\\" (click)=\\\"addNewExperience()\\\" color=\\\"warn\\\" mat-icon-button=\\\"\\\"\\n                        class=\\\"mat-icon-button mat-button-base mat-warn\\\"><span class=\\\"mat-button-wrapper\\\"\\n                            title=\\\"Add Language\\\">\\n                            <mat-icon class=\\\"mat-icon notranslate material-icons mat-icon-no-color\\\" role=\\\"img\\\"\\n                                aria-hidden=\\\"true\\\">add_box</mat-icon>\\n                        </span>\\n                        <div class=\\\"mat-button-ripple mat-ripple mat-button-ripple-round\\\" matripple=\\\"\\\"></div>\\n                        <div class=\\\"mat-button-focus-overlay\\\"></div>\\n                    </button>\\n\\n                    <!-- <button class=\\\"btn btn-sm btn-primary\\\" type=\\\"button\\\" (click)=\\\"addNewEducation()\\\"> <i\\n                            class=\\\"material-icons md-44\\\">add</i></button> -->\\n                </div>\\n\\n            </div>\\n\\n\\n        </mat-card-content>\\n        <mat-card-actions>\\n            <div class=\\\"text-center\\\">\\n                <button type=\\\"submit\\\" color=\\\"primary\\\" mat-raised-button=\\\"\\\"\\n                    class=\\\"mat-raised-button mat-button-base mat-primary\\\">\\n                    <span class=\\\"mat-button-wrapper\\\">Save</span>\\n                    <div class=\\\"mat-button-ripple mat-ripple\\\" matripple=\\\"\\\"></div>\\n                    <div class=\\\"mat-button-focus-overlay\\\"></div>\\n                </button>\\n            </div>\\n\\n        </mat-card-actions>\\n\\n\\n\\n    </mat-card>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { DataSubmitService } from '../data-submit.service';\nimport { DataGetService } from '../data-get.service';\nimport { Globals } from '../common/Globals'\nimport { MasterDropDownsService } from '../master-drop-downs.service';\nimport { CommonUtility } from '../common/common-utility';\n@Component({\n  selector: 'experience',\n  templateUrl: './experience.component.html',\n  styleUrls: ['./experience.component.css']\n})\nexport class ExperienceComponent implements OnInit {\n  designationMatser:any;\n  addExprForm: FormArray;\n  ngOnInit() {\n    this.getDesignation();\n    this.addExprForm = this.fb.array([\n      this.addExperience()\n    ]);\n    this.getData();\n  }\n  constructor(private dataSubmitService: DataSubmitService, private fb: FormBuilder,private _masterDpDn: MasterDropDownsService, private dataGetService: DataGetService, private globals: Globals,private _utils : CommonUtility) { }\n\n private getDesignation() {\n    this._masterDpDn.getLanguages('master_designation').subscribe(\n        data => { this.designationMatser = data; },\n        error => { console.log(error); });\n}\n  addExperience(): FormGroup {\n    return this.fb.group({\n      company: [null, [Validators.required,]],\n      startDate: ['', Validators.required],\n      endDate: ['', [Validators.required]],\n      responsibilites: ['', [Validators.required]],\n      userId: [this.globals.userId, Validators.required],\n      isCurrentlyWorking: [false,],\n      designation: ['', [Validators.required]]\n    })\n  }\n\n  submitData() {\n    console.log(this.addExprForm.value);\n    this.dataSubmitService.submitExperiencenData(this.addExprForm.value).subscribe(\n      data => {\n        this.setSuccess(data);\n        this.getData();\n      },\n      error => {\n        console.log(error);\n        this.setError(error)\n      });\n  }\n  getData() {\n    this.dataGetService.getExperienceInfo(this.globals.userId).subscribe(\n      data => {\n        console.log(data);\n        this.globals.expCreated=true;\n        this.setExperienceData(data);\n      },\n      error => {\n        console.log(error);\n      });\n  }\n  setExperienceData(data) {\n    this.addExprForm.patchValue(data);\n  }\n  setSuccess(data) {\n    this._utils.openSnackBar(\"Data submiteed successfully\",\"OK\");\n    console.log(\"Success\");\n    console.log(data);\n\n  }\n  setError(data) {\n    console.log(\"Error Occured\" + data.error);\n    this.addExprForm.setErrors({});\n  }\n\n  get experiences() {\n    return this.addExprForm as FormArray;\n  }\n  addNewExperience() {\n    this.experiences.push(this.addExperience());\n  }\n  removeExperience(index): void {\n    ((this.experiences) as FormArray).removeAt(index);\n  }\n\n\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div style=\\\"height: 100vh;\\\">\\n    <mat-toolbar color=\\\"{{toolColor}}\\\">\\n        <div fxShow=\\\"true\\\" fxHide.gt-sm=\\\"true\\\">\\n            <a (click)=\\\"sidenav.toggle()\\\" mat-button>  <mat-icon>reorder</mat-icon></a>\\n        </div>\\n        <button mat-icon-button color='white'>\\n                <mat-icon>bubble_chart</mat-icon>\\n        </button>\\n        <span>Pro Career</span>\\n\\n        <span class=\\\"example-spacer\\\"></span>\\n\\n        <div fxShow=\\\"true\\\" fxHide.lt-md=\\\"true\\\">\\n            <a mat-button>Dashboard</a>\\n        </div>\\n        <!-- This fills the remaining space of the current row -->\\n        <span class=\\\"fill-remaining-space \\\"></span>\\n        <div fxShow=\\\"true\\\" >\\n\\n                    <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\">\\n                            <mat-icon>more_vert</mat-icon>\\n                    </button>\\n                          <mat-menu #menu=\\\"matMenu\\\">\\n                            <button mat-menu-item>\\n                              <mat-icon>email</mat-icon>\\n                              <span>{{data.userEmail}}</span>\\n                            </button>\\n                            \\n                            <button mat-menu-item>\\n                              <mat-icon>account_circle</mat-icon>\\n                              <span>Profile</span>\\n                            </button>\\n                          </mat-menu>\\n\\n                          <!-- Menu 2---- -->\\n                          <button mat-icon-button [matMenuTriggerFor]=\\\"menu2\\\">\\n                            <mat-icon>color_lens</mat-icon>\\n                    </button>\\n                          <mat-menu #menu2=\\\"matMenu\\\">\\n                            <button mat-menu-item (click)='changeToolColor($event)' tool-color='primary'>\\n                              <span tool-color='primary'>primary</span>\\n                            </button>\\n                            <button mat-menu-item (click)='changeToolColor($event)' tool-color='accent'>\\n                                <span tool-color='accent'>accent</span>\\n                            </button>\\n                            <button mat-menu-item (click)='changeToolColor($event)' tool-color='warn'>\\n                                <span tool-color='warn'>warn</span>\\n                            </button>\\n                          </mat-menu>\\n                          <button (click)=\\\"logOut()\\\" mat-icon-button [matMenuTriggerFor]=\\\"menu2\\\">\\n                            <mat-icon>power_settings_new</mat-icon>\\n                    </button>\\n                        \\n                          \\n        </div>\\n    </mat-toolbar>\\n\\n    <mat-sidenav-container fxFlexFill class=\\\"example-container\\\">\\n        <mat-sidenav #sidenav fxLayout=\\\"column\\\">\\n            <div fxLayout=\\\"column\\\">\\n                <a (click)=\\\"sidenav.toggle()\\\" mat-button><i class=\\\"material-icons  md-24\\\">clear</i></a>\\n                <a mat-button>Dashoboard</a>\\n                <a mat-button>My Profile</a>\\n\\n            </div>\\n        </mat-sidenav>\\n        <mat-sidenav-content fxFlexFill>\\n            <mat-tab-group>\\n                <mat-tab label=\\\"Basic Details\\\">\\n                    <basic-details></basic-details>\\n                </mat-tab>\\n                <mat-tab label=\\\"Personal Details\\\">\\n                    <personal-details></personal-details>\\n                </mat-tab>\\n                <mat-tab label=\\\"Education\\\">\\n                    <education></education>\\n                </mat-tab>\\n                <mat-tab label=\\\"Additional Education\\\">\\n                    <addn-education></addn-education>\\n                </mat-tab>\\n                <mat-tab label=\\\"Experience\\\">\\n                    <experience></experience>\\n                </mat-tab>\\n                <mat-tab label=\\\"Other \\\">\\n                    <other></other>\\n                </mat-tab>\\n                <mat-tab label=\\\"Declaration\\\">\\n                    <declaration></declaration>\\n                </mat-tab>\\n                <mat-tab label=\\\"Output\\\"><output></output></mat-tab>\\n            </mat-tab-group>\\n        </mat-sidenav-content>\\n    </mat-sidenav-container>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Globals } from '../common/Globals'\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  \n\n  constructor(private globals : Globals,private router:Router) { \n    this.setData();\n  }\n\n  data:any;\n  toolColor:string='primary';\n  ngOnInit() {\n    \n    if(this.globals.userId==undefined||this.globals.userId==null){\n      this.setData();\n    //this.logOut();\n    }\n    \n  }\n  setData(){\n    this.globals.token=\"95741a50a08e3904948774f5c1eae9e37581bee8\";\n    this.globals.userId=9;\n    this.globals.email= \"urvil.kat@gmail.com\";\n    this.globals.Authorization=\"95741a50a08e3904948774f5c1eae9e37581bee8\";\n    this.data={\n      \"userEmail\":this.globals.email,\n      \"userToken\":this.globals.token,\n      \"userId\":this.globals.userId,\n    }\n\n  }\n  logOut(){\n    this.globals.token=null;\n    this.globals.userId=null;\n    this.globals.email=null;\n    this.globals.Authorization=null;\n    console.log(\"You are not logged in\");\n    this.router.navigate(['']);\n  }\n  changeToolColor(event){\n      console.log(event.target.getAttribute('tool-color'));\n      this.toolColor=event.target.getAttribute('tool-color');\n  }\n\n}\n","module.exports = \".mat-snack-bar-container {\\r\\n    max-width: 800px!important;\\r\\n }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW5tb2RhbC9sb2dpbm1vZGFsLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSwwQkFBMEI7Q0FDN0IiLCJmaWxlIjoic3JjL2FwcC9sb2dpbm1vZGFsL2xvZ2lubW9kYWwuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXQtc25hY2stYmFyLWNvbnRhaW5lciB7XHJcbiAgICBtYXgtd2lkdGg6IDgwMHB4IWltcG9ydGFudDtcclxuIH0iXX0= */\"","module.exports = \"<div class=\\\"card\\\">\\n    <div class=\\\"card-body\\\">\\n        <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"login()\\\">\\n            <div class=\\\"form-group\\\">\\n                <mat-form-field>\\n                    <input matInput placeholder=\\\"email\\\" type=\\\"text\\\" formControlName=\\\"email\\\" />\\n                </mat-form-field>\\n\\n                <div class=\\\"invalid-feedback d-inline\\\"\\n                    *ngIf=\\\"loginForm.get('email').touched && loginForm.get('email').invalid\\\">Email is mandatory</div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <mat-form-field>\\n                    <input matInput placeholder=\\\"password\\\" type=\\\"password\\\" formControlName=\\\"password\\\" />\\n                </mat-form-field>\\n                <div class=\\\"invalid-feedback d-inline\\\"\\n                    *ngIf=\\\"loginForm.get('password').touched && loginForm.get('password').invalid\\\">Password is mandatory\\n                </div>\\n\\n            </div>\\n            <div class=\\\"form-group text-center\\\">\\n                <button class=\\\"btn btn-sm btn-primary\\\" style=\\\"float: left\\\">Login</button> &nbsp;\\n                <button type=\\\"button\\\" class=\\\"btn  btn-sm btn-success\\\" style=\\\"float: right\\\">Guest Login</button>\\n                <!-- <button type=\\\"button\\\" class=\\\"btn btn-sm btn-danger\\\" style=\\\"float: right\\\"> Facebook</button> -->\\n                <br><br>\\n                <a><u>Forgot password</u></a>&nbsp; <a data-toggle=\\\"modal\\\"\\n                    data-target=\\\"#registerModal\\\"><u>Register</u></a>\\n\\n            </div>\\n\\n\\n        </form>\\n    </div>\\n</div>\"","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormGroup, FormControl,Validators } from '@angular/forms';\nimport { RegisterService } from '../register.service';\nimport { Router } from '@angular/router';\nimport { Globals } from '../common/Globals';\nimport { MatSnackBar } from '@angular/material';\ndeclare var $: any;\n@Component({\n  selector: 'loginmodal',\n  templateUrl: './loginmodal.component.html',\n  styleUrls: ['./loginmodal.component.css'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class LoginmodalComponent { \n\n  constructor(private registerService:RegisterService,private router: Router,private globals:Globals,private _snackBar:MatSnackBar){}\n    loginForm = new FormGroup({\n        \"email\": new FormControl('',[Validators.required,Validators.minLength(3)]),\n        \"password\": new FormControl('',Validators.required)\n    });\n     get email(){\n        return this.loginForm.get('email'); \n    }\n    get password(){\n        return this.loginForm.get('password');\n    }\n      login(){\n        console.log(this.loginForm.value);\n        this.registerService.login(this.loginForm.value).subscribe(\n        data=>{\n          this.setSuccess(data)\n        },\n        error=>{\n                console.log(error); \n                this.setError(error)\n        });\n    }\n    setSuccess(data){\n        console.log(data);\n        if(data.detail==\"Wrong Password.\"){\n          this.openSnackBar(\"Invalid User ID or Password\",\"Try Again\");\n          return;\n        }else{\n          $(\"#loginModal\").modal('hide');\n          this.globals.token=data.token;\n          this.globals.userId=data.userId;\n          this.globals.email=data.email;\n          this.globals.Authorization=data.token;\n          this.router.navigate(['/home']);\n        }\n        \n        \n    }\n    setError(data){\n        console.log(\"Error Occured\"+data.error);\n        \n        //this.loginForm.setErrors({invalidLogin:true});\n    }\n\n    openSnackBar(message:string,action:string) {\n      this._snackBar.open(message, action, {\n        duration: 2000,\n      });\n    }\n    \n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient,HttpHeaders } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport {AppError} from './common/app-error';\nimport * as basrUrls from './common/service-urls'; \n@Injectable({\n  providedIn: 'root'\n})\nexport class MasterDropDownsService {\n\n  baseUrl=basrUrls.baseUrl;\n     //httpHeaders=new HttpHeaders({'Content-Type':'application/json'});\n     httpHeaders=basrUrls.httpHeaders;\n    \n  constructor(private http:HttpClient){}\n  getLanguages(masterTable):Observable<any>{\n   // debugger;\n    return this.http.get(this.baseUrl+'/'+masterTable+'/',{headers:this.httpHeaders})   \n}\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25hdmJhci1mb290ZXIvbmF2YmFyLWZvb3Rlci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<footer class=\\\"footer\\\">\\n    <div class=\\\"row \\\">\\n        <div class=\\\"col-sm-3 \\\">\\n            <span class=\\\"w-t\\\">About Us!</span><br>\\n            <span class=\\\"w-t\\\"><a href=\\\"#\\\"></a>Pro Career Limited<a></a></span>\\n        </div>\\n        <div class=\\\"col-sm-3 \\\">\\n            <span class=\\\"w-t\\\">Our Products</span><br>\\n            <span class=\\\"w-t\\\"><a href=\\\"#\\\"></a>Pro Career Limited<a></a></span>\\n        </div>\\n       \\n\\n    </div>\\n    <hr>\\n   <!-- <div class=\\\"container text-center\\\">\\n        <span class=\\\"text-muted\\\"><i class=\\\"material-icons md-light md-18\\\">copyright</i> Pro Career</span>\\n    </div>-->\\n</footer>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'navbar-footer',\n  templateUrl: './navbar-footer.component.html',\n  styleUrls: ['./navbar-footer.component.css']\n})\nexport class NavbarFooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25hdmJhci1oZWFkZXIvbmF2YmFyLWhlYWRlci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div style=\\\"height: 100vh;\\\">\\n  <mat-toolbar color=\\\"primary\\\">\\n    <div fxShow=\\\"true\\\" fxHide.gt-sm=\\\"true\\\">\\n      <a (click)=\\\"sidenav.toggle()\\\" mat-button>\\n        <mat-icon>reorder</mat-icon>\\n      </a>\\n    </div>\\n    <button mat-icon-button  color='white'>\\n        <mat-icon>bubble_chart</mat-icon>\\n  </button>\\n    <span>Pro Career</span>\\n\\n    <span class=\\\"example-spacer\\\"></span>\\n\\n    <!-- <div fxShow=\\\"true\\\" fxHide.lt-md=\\\"true\\\">\\n      <a mat-button>Dashboard</a>\\n    </div> -->\\n    <!-- This fills the remaining space of the current row -->\\n    <span class=\\\"fill-remaining-space \\\"></span>\\n\\n    <div fxShow=\\\"true\\\">\\n      <button data-toggle=\\\"modal\\\" data-target=\\\"#loginModal\\\" mat-icon-button>\\n        <mat-icon>account_circle</mat-icon>\\n      </button>\\n      <button data-toggle=\\\"modal\\\" data-target=\\\"#registerModal\\\" mat-icon-button>\\n        <mat-icon>edit</mat-icon>\\n      </button>\\n\\n\\n    </div>\\n\\n  </mat-toolbar>\\n\\n  <mat-sidenav-container fxFlexFill class=\\\"example-container\\\">\\n    <mat-sidenav #sidenav fxLayout=\\\"column\\\">\\n      <div fxLayout=\\\"column\\\">\\n        <a (click)=\\\"sidenav.toggle()\\\" mat-button><i class=\\\"material-icons  md-24\\\">clear</i></a>\\n        <a mat-button>Dashoboard</a>\\n        <a mat-button>My Profile</a>\\n\\n      </div>\\n    </mat-sidenav>\\n    <!-- <mat-grid-list [cols]=\\\"breakpoint\\\" rowHeight=\\\"4:3\\\"> -->\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-4\\\">\\n        <mat-card class=\\\"example-card\\\">\\n          <mat-card-header>\\n            <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\n            <mat-card-title>Top Recruiters</mat-card-title>\\n            <mat-card-subtitle>Rated</mat-card-subtitle>\\n          </mat-card-header>\\n\\n          <mat-card-content>\\n            <ul>\\n\\n              <li>IBM</li>\\n\\n              <li>Infosys</li>\\n\\n              <li>TCS</li>\\n            </ul>\\n          </mat-card-content>\\n          <mat-card-actions>\\n            <button mat-button>Explore</button>\\n            \\n          </mat-card-actions>\\n        </mat-card>\\n      </div>\\n      <div class=\\\"col-sm-4\\\">\\n        <mat-card class=\\\"example-card\\\">\\n          <mat-card-header>\\n            <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\n            <mat-card-title>Top Recruiters</mat-card-title>\\n            <mat-card-subtitle>Rated</mat-card-subtitle>\\n          </mat-card-header>\\n          \\n          <mat-card-content>\\n              <ul>\\n  \\n                <li>IBM</li>\\n  \\n                <li>Infosys</li>\\n  \\n                <li>TCS</li>\\n              </ul>\\n            </mat-card-content>\\n          <mat-card-actions>\\n            <button mat-button>Explore</button>\\n            \\n          </mat-card-actions>\\n        </mat-card>\\n      </div>\\n      <div class=\\\"col-sm-4\\\">\\n          <mat-card class=\\\"example-card\\\">\\n            <mat-card-header>\\n              <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\n              <mat-card-title>Top Recruiters</mat-card-title>\\n              <mat-card-subtitle>Rated</mat-card-subtitle>\\n            </mat-card-header>\\n            \\n            <mat-card-content>\\n                <ul>\\n    \\n                  <li>IBM</li>\\n    \\n                  <li>Infosys</li>\\n    \\n                  <li>TCS</li>\\n                </ul>\\n              </mat-card-content>\\n            <mat-card-actions>\\n              <button mat-button>Explore</button>\\n              \\n            </mat-card-actions>\\n          </mat-card>\\n        </div>\\n        <div class=\\\"col-sm-4\\\">\\n            <mat-card class=\\\"example-card\\\">\\n              <mat-card-header>\\n                <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\n                <mat-card-title>Top Recruiters</mat-card-title>\\n                <mat-card-subtitle>Rated</mat-card-subtitle>\\n              </mat-card-header>\\n              \\n              <mat-card-content>\\n                  <ul>\\n      \\n                    <li>IBM</li>\\n      \\n                    <li>Infosys</li>\\n      \\n                    <li>TCS</li>\\n                  </ul>\\n                </mat-card-content>\\n              <mat-card-actions>\\n                <button mat-button>Explore</button>\\n                \\n              </mat-card-actions>\\n            </mat-card>\\n          </div>\\n\\n    </div>\\n\\n\\n\\n    <!-- </mat-grid-list> -->\\n  </mat-sidenav-container>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'navbar-header',\n  templateUrl: './navbar-header.component.html',\n  styleUrls: ['./navbar-header.component.css']\n})\nexport class NavbarHeaderComponent implements OnInit {\n\n  constructor() { }\n  breakpoint:number;\n  ngOnInit() {\n    this.breakpoint = (window.innerWidth <= 600) ? 1 : 3;\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25vdC1mb3VuZC9ub3QtZm91bmQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<p>\\n  No Such u URL found\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL290aGVyL290aGVyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<form [formGroup]=\\\"otherForm\\\" (ngSubmit)=\\\"submitData()\\\">\\n        <mat-card class=\\\"mat-card-data-entry\\\">\\n                <mat-card-header>\\n        \\n                    <!-- <mat-card-title>Shiba Inu</mat-card-title>\\n                                    <mat-card-subtitle>Dog Breed</mat-card-subtitle> -->\\n                </mat-card-header>\\n                <mat-card-content>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"form-group col-sm-2\\\">\\n                    <mat-form-field>\\n                        <input matInput type=\\\"text\\\" placeholder=\\\"Current Location\\\" formControlName='currentLocation'>\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"form-group col-sm-2\\\">\\n                    <mat-form-field>\\n                        <input matInput type=\\\"text\\\" placeholder=\\\"Prefered Location\\\" formControlName='preferredLocation'>\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"form-group col-sm-2\\\">\\n                    <mat-form-field>\\n                        <input matInput type=\\\"text\\\" placeholder=\\\"Current CTC\\\" formControlName='currentCTC'>\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"form-group col-sm-2\\\">\\n                    <mat-form-field>\\n                        <input matInput type=\\\"text\\\" placeholder=\\\"Expected CTC\\\" formControlName='expectedCTC'>\\n                    </mat-form-field>\\n                </div>\\n\\n                <div class=\\\"form-group col-sm-2\\\">\\n                    <mat-form-field >\\n                            <mat-label>Interested Working Areas</mat-label>\\n                        <input matInput type=\\\"text\\\" placeholder=\\\"Ex- Machine Learning, Data Science\\\"\\n                            formControlName='intrestedWorkingArea'>\\n                            <mat-hint >Eg. Machine Learning, Data Science </mat-hint>\\n                    </mat-form-field>\\n                </div>\\n            </div>\\n        </mat-card-content>\\n    <mat-card-actions>\\n            <div class=\\\"text-center\\\">\\n                    <button type=\\\"submit\\\" color=\\\"primary\\\" mat-raised-button=\\\"\\\"\\n                    class=\\\"mat-raised-button mat-button-base mat-primary\\\">\\n                    <span class=\\\"mat-button-wrapper\\\">Save</span>\\n                    <div class=\\\"mat-button-ripple mat-ripple\\\" matripple=\\\"\\\"></div>\\n                    <div class=\\\"mat-button-focus-overlay\\\"></div>\\n                </button>\\n            </div>\\n        </mat-card-actions>\\n    </mat-card>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, AbstractControl, Validators } from '@angular/forms';\nimport { DataSubmitService } from '../data-submit.service';\nimport { Globals } from '../common/Globals';\nimport { DataGetService } from '../data-get.service';\nimport { MatSnackBar } from '@angular/material';\n\n@Component({\n  selector: 'other',\n  templateUrl: './other.component.html',\n  styleUrls: ['./other.component.css']\n})\nexport class OtherComponent implements OnInit {\n  otherForm:AbstractControl;\n  constructor(private fb:FormBuilder,private dataSubmitService:DataSubmitService,\n    private dataGetService: DataGetService,private globals:Globals,private _snackBar:MatSnackBar ) { }\n\n\n  ngOnInit() {\n    this.otherForm=this.fb.group({\n      currentLocation:['',Validators.required],\n      preferredLocation:['',Validators.required],\n      expectedCTC:[0,[Validators.required,Validators.minLength(10)]],\n      currentCTC:[0,Validators.required],\n      intrestedWorkingArea:['',Validators.required],\n      id:[this.globals.userId,Validators.required]\n    });\n    this.getData();\n  }\n  submitData(){\n    console.log(this.otherForm.value);\n    this.dataSubmitService.submitBasicData(this.otherForm.value).subscribe(\n    data=>{\n            this.setSuccess(data);\n            this.getData();\n         },\n    error=>{\n            console.log(error);  \n            this.setError(error);\n            this.getData();\n    });\n}\n\ngetData(){\n  this.dataGetService.getBaiscInfo(this.otherForm.value.id).subscribe(\n  data=>{console.log(data);\n        this.setBasicData(data);\n      },\n  error=>{\n          this.globals.isBasicCreated=false;\n          console.log(error);\n  });\n} \nsetBasicData(data) {\n  this.globals.isBasicCreated=true;\n  this.otherForm.patchValue(data);\n}\nsetSuccess(data){\n  this.openSnackBar(\"Data submiteed successfully\",\"OK\");\n  console.log(\"Success\");\n  console.log(data);\n  \n}\nsetError(data){\n  console.log(\"Error Occured\"+data.error); \n//  this.otherForm.setErrors({});\n}\nopenSnackBar(message:string,action:string) {\n  this._snackBar.open(message, action, {\n    duration: 2000,\n  });\n}\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL291dHB1dC9vdXRwdXQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<form [formGroup]=\\\"resumeForm\\\" (ngSubmit)=\\\"downloadResume()\\\">\\n    <mat-card class=\\\"mat-card-data-entry\\\">\\n        <mat-card-header>\\n        </mat-card-header>\\n        <mat-card-content>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-12 \\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName='userId' hidden>\\n                </div>\\n                <div class=\\\"text-center col-sm-12 \\\">\\n                      \\n                    <button type=\\\"submit\\\" color=\\\"primary\\\" mat-raised-button=\\\"\\\"\\n                        class=\\\"mat-raised-button mat-button-base mat-primary\\\">\\n                        <span class=\\\"mat-button-wrapper\\\">Download Resume</span>\\n                        <div class=\\\"mat-button-ripple mat-ripple\\\" matripple=\\\"\\\"></div>\\n                        <div class=\\\"mat-button-focus-overlay\\\"></div>\\n                    </button>\\n                    \\n                </div>\\n            </div>\\n        </mat-card-content>\\n        <mat-card-actions>\\n            \\n        </mat-card-actions>\\n    </mat-card>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Globals } from '../common/Globals';\nimport { DataSubmitService } from '../data-submit.service';\nimport { DataGetService } from '../data-get.service';\nimport { MatSnackBar } from '@angular/material';\n\n@Component({\n  selector: 'output',\n  templateUrl: './output.component.html',\n  styleUrls: ['./output.component.css']\n})\nexport class OutputComponent implements OnInit {\n  resumeForm:any\n  constructor(private fb:FormBuilder,private dataSubmitService:DataSubmitService,\n    private dataGetService: DataGetService,private globals:Globals,private _snackBar:MatSnackBar) { }\n\n  ngOnInit() {\n    this.resumeForm=this.fb.group({\n      userId:[this.globals.userId,Validators.required],\n    });\n  }\n\n  downloadResume(){\n    //this.resumeForm.submit;\n    \n    window.location.assign(\"http://18.136.200.90/generate_resume/?userId=9\");\n\n    // this.dataSubmitService.generateResume(this.resumeForm.value).subscribe(\n    //   data=>{console.log(data);\n    //       },\n    //   error=>{\n    //           console.log(error);\n    //   });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BlcnNvbmFsLWRldGFpbHMvcGVyc29uYWwtZGV0YWlscy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<form [formGroup]=\\\"pForm\\\" (ngSubmit)=\\\"submitData()\\\">\\n    <mat-card class=\\\"\\\">\\n        <mat-card-header>\\n\\n            <!-- <mat-card-title>Shiba Inu</mat-card-title>\\n                    <mat-card-subtitle>Dog Breed</mat-card-subtitle> -->\\n        </mat-card-header>\\n        <mat-card-content>\\n            <div class=\\\"\\\">\\n                <div class=\\\"col-sm-12 row\\\">\\n                    <div class=\\\"col-sm-8 row\\\">\\n\\n                        <input type=\\\"text\\\" placeholder=\\\"First Name\\\" formControlName='id' hidden=\\\"\\\" readonly>\\n                        <div class=\\\"form-group col-sm-4\\\"\\n                            [ngClass]=\\\"{'has-error': firstName.touched && firstName.invalid}\\\">\\n                            <mat-form-field>\\n                                <input matInput type=\\\"text\\\" placeholder=\\\"First Name\\\" formControlName='firstName'>\\n                            </mat-form-field>\\n                            <div *ngIf=\\\"firstName.touched && firstName.invalid\\\" class=\\\"invalid-feedback d-inline \\\">\\n                                {{formErrors.firstName}}\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-group col-sm-4\\\">\\n                            <mat-form-field>\\n                                <input matInput type=\\\"text\\\" placeholder=\\\"Last Name\\\" id='lastName' name=\\\"lastName\\\"\\n                                    formControlName='lastName'>\\n                            </mat-form-field>\\n\\n                            <div *ngIf=\\\"lastName.touched && lastName.invalid\\\" class=\\\"invalid-feedback d-inline \\\">\\n                                {{formErrors.lastName}}\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-group col-sm-4\\\">\\n                                <mat-form-field>\\n                                    <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"DOB\\\" formControlName='dob'>\\n                                    <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                                    <mat-datepicker #picker></mat-datepicker>\\n                                </mat-form-field>\\n                                <div *ngIf=\\\"dob.touched && dob.invalid\\\" class=\\\"invalid-feedback d-inline \\\">\\n                                    {{formErrors.dob}}\\n                                </div>\\n                            </div>\\n                        <div class=\\\"form-group col-sm-4\\\">\\n                            <mat-form-field>\\n                                <input matInput type=\\\"text\\\" placeholder=\\\"Mobile No\\\" id=\\\"mobileNo\\\"\\n                                    formControlName='mobileNo'>\\n                            </mat-form-field>\\n\\n                            <div *ngIf=\\\"mobileNo.touched && mobileNo.invalid\\\" class=\\\"invalid-feedback d-inline \\\">\\n                                {{formErrors.mobileNo}}\\n                            </div>\\n\\n                        </div>\\n                        <div class=\\\"form-group col-sm-4\\\">\\n                            <mat-form-field>\\n                                <input matInput type=\\\"number\\\" placeholder=\\\"Phone No\\\" id='phoneNo' name=\\\"phoneNo\\\"\\n                                    formControlName='phoneNo'>\\n                            </mat-form-field>\\n\\n                        </div>\\n                        <div class=\\\"form-group col-sm-4\\\">\\n                                <mat-form-field>\\n                                    <mat-label>Marital Status</mat-label>\\n                                    <mat-select id='maritalStatus' name=\\\"maritalStatus\\\" formControlName='maritalStatus'>\\n                                        <mat-option value=\\\"null\\\">SELECT</mat-option>\\n                                        <mat-option value=\\\"1\\\">Single</mat-option>\\n                                        <mat-option value=\\\"2\\\">Married</mat-option>\\n                                        <mat-option value=\\\"3\\\">Not to Disclosed</mat-option>\\n                                    </mat-select>\\n                                </mat-form-field>\\n    \\n                                <div *ngIf=\\\"maritalStatus.touched && maritalStatus.invalid\\\"\\n                                    class=\\\"invalid-feedback d-inline \\\">\\n                                    {{formErrors.maritalStatus}}\\n                                </div>\\n                            </div>\\n                        <div class=\\\"form-group col-sm-4\\\">\\n                            <mat-form-field>\\n                                <input matInput type=\\\"text\\\" placeholder=\\\"Email ID\\\" id='emailId' name=\\\"emailId\\\"\\n                                    formControlName='emailId' readonly>\\n                            </mat-form-field>\\n                            <div *ngIf=\\\"emailId.touched && emailId.invalid\\\" class=\\\"invalid-feedback d-inline \\\">\\n                                {{formErrors.emailId}}\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-group col-sm-4\\\">\\n                            <mat-form-field>\\n                                <input matInput type=\\\"text\\\" placeholder=\\\"Alternate Email ID\\\" id='alterEmailId'\\n                                    name=\\\"alterEmailId\\\" formControlName='alterEmailId'>\\n                            </mat-form-field>\\n\\n                        </div>\\n                        \\n\\n                        <div class=\\\"form-group col-sm-4\\\">\\n                            <mat-form-field>\\n                                <mat-label>Nationality</mat-label>\\n                                <mat-select matInput formControlName='nationality'>\\n                                    <mat-option value=\\\"null\\\" selected>SELECT</mat-option>\\n                                    <mat-option *ngFor=\\\"let nationality of nationalityMaster\\\" [value]=\\\"nationality.mid\\\">\\n                                        {{nationality.mvalue}}</mat-option>\\n                                </mat-select>\\n                            </mat-form-field>\\n                            <div *ngIf=\\\"nationality.touched && nationality.invalid\\\" class=\\\"invalid-feedback d-inline \\\">\\n                                {{formErrors.nationality}}\\n                            </div>\\n                        </div>\\n\\n\\n                    </div>\\n                    <div class=\\\"col-sm-4\\\">\\n                        <div class=\\\" card\\\" formArrayName=\\\"user_languages\\\">\\n\\n                            <div *ngFor=\\\"let lang of languages.controls; let i=index\\\" class=\\\"col-sm-12\\\">\\n                                <hr>\\n                                <div class=\\\"\\\" [formGroupName]=\\\"i\\\">\\n\\n                                    <input type=\\\"text\\\" formControlName='userId' hidden>\\n                                    <div class=\\\"form-group col-sm-12\\\">\\n                                        <mat-form-field>\\n                                            <mat-label>Language {{i+1}}</mat-label>\\n\\n                                            <mat-select type=\\\"text\\\" [id]=\\\"'languageId'+i\\\" formControlName='languageId'>\\n                                                <mat-option value=\\\"null\\\" selected>SELECT</mat-option>\\n                                                <mat-option *ngFor=\\\"let language of languageMaster\\\"\\n                                                    [value]=\\\"language.mid\\\">\\n                                                    {{language.mvalue}}</mat-option>\\n                                            </mat-select>\\n                                        </mat-form-field>\\n\\n                                        <div *ngIf=\\\"lang.controls.languageId.invalid && lang.controls.languageId.touched\\\"\\n                                            class=\\\"invalid-feedback d-inline \\\">\\n                                            Language is required\\n                                        </div>\\n\\n                                    </div>\\n                                    <div class=\\\"form-check form-check-inline\\\">\\n\\n                                        <mat-checkbox type=\\\"checkbox\\\" value=\\\"mat-option1\\\" formControlName='canSpeak'>\\n                                            Speak\\n                                        </mat-checkbox>\\n\\n                                    </div>\\n                                    <div class=\\\"form-check form-check-inline\\\">\\n                                        <mat-checkbox type=\\\"checkbox\\\" [id]=\\\"'inlineCheckbox2'+i\\\" value=\\\"option2\\\"\\n                                            formControlName='canRead'>Read</mat-checkbox>\\n\\n                                    </div>\\n                                    <div class=\\\"form-check form-check-inline\\\">\\n                                        <mat-checkbox type=\\\"checkbox\\\" [id]=\\\"'inlineCheckbox3'+i\\\" value=\\\"option3\\\"\\n                                            formControlName='canWrite'>Write</mat-checkbox>\\n\\n                                    </div>\\n                                    <div class=\\\"col-sm-3\\\" *ngIf='i>0'>\\n                                        <button (click)=\\\"removeNewLanguage(i)\\\" color=\\\"warn\\\" mat-icon-button=\\\"\\\"\\n                                            class=\\\"mat-icon-button mat-button-base mat-warn\\\"><span\\n                                                class=\\\"mat-button-wrapper\\\">\\n                                                <mat-icon class=\\\"mat-icon notranslate material-icons mat-icon-no-color\\\"\\n                                                    role=\\\"img\\\" aria-hidden=\\\"true\\\">delete</mat-icon>\\n                                            </span>\\n                                            <div class=\\\"mat-button-ripple mat-ripple mat-button-ripple-round\\\"\\n                                                matripple=\\\"\\\">\\n                                            </div>\\n                                            <div class=\\\"mat-button-focus-overlay\\\"></div>\\n                                        </button>\\n\\n                                    </div>\\n\\n\\n                                </div>\\n\\n                                <hr>\\n                            </div>\\n                            <div>\\n                                <button type=\\\"button\\\" (click)=\\\"addNewLanguage()\\\" color=\\\"primary\\\" mat-icon-button=\\\"\\\"\\n                                    class=\\\"mat-icon-button mat-button-base mat-primary\\\"><span class=\\\"mat-button-wrapper\\\"\\n                                        title=\\\"Add Language\\\">\\n                                        <mat-icon class=\\\"mat-icon notranslate material-icons mat-icon-no-color\\\"\\n                                            role=\\\"img\\\" aria-hidden=\\\"true\\\">add_box</mat-icon>\\n                                    </span>\\n                                    <div class=\\\"mat-button-ripple mat-ripple mat-button-ripple-round\\\" matripple=\\\"\\\">\\n                                    </div>\\n                                    <div class=\\\"mat-button-focus-overlay\\\"></div>\\n                                </button>\\n                            </div>\\n\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </mat-card-content>\\n        <mat-card-actions>\\n            <div class=\\\"text-center\\\">\\n                <button type=\\\"submit\\\" color=\\\"primary\\\" mat-raised-button=\\\"\\\"\\n                    class=\\\"mat-raised-button mat-button-base mat-primary\\\">\\n                    <span class=\\\"mat-button-wrapper\\\">Save</span>\\n                    <div class=\\\"mat-button-ripple mat-ripple\\\" matripple=\\\"\\\"></div>\\n                    <div class=\\\"mat-button-focus-overlay\\\"></div>\\n                </button>\\n            </div>\\n        </mat-card-actions>\\n\\n\\n\\n    </mat-card>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormArray, FormBuilder } from '@angular/forms';\nimport { FirstNameValidators } from './firstName.validator';\nimport { DataSubmitService } from '../data-submit.service';\nimport { MasterDropDownsService } from '../master-drop-downs.service';\nimport { DataGetService } from '../data-get.service';\nimport { Globals } from '../common/Globals'\nimport { NativeDateAdapter, MatSnackBar } from '@angular/material';\nimport { MatDateFormats, DateAdapter, MAT_DATE_FORMATS } from '@angular/material/core';\nimport { AppDateAdapter, APP_DATE_FORMATS } from '../common/format-datepicker';\nimport { CommonUtility } from '../common/common-utility';\n@Component({\n    selector: 'personal-details',\n    templateUrl: './personal-details.component.html',\n    styleUrls: ['./personal-details.component.css'],\n    providers: [\n        {provide: DateAdapter, useClass: AppDateAdapter},\n        {provide: MAT_DATE_FORMATS, useValue: APP_DATE_FORMATS}\n      ]\n})\nexport class PersonalDetailsComponent implements OnInit {\n    pForm:any;\n    languageMaster:any;\n    nationalityMaster: any;\n\n    constructor(private dataSubmitService: DataSubmitService, private fb: FormBuilder, private masterDpDn: MasterDropDownsService,private dataGetService : DataGetService,private globals: Globals,private _utils : CommonUtility) { }\n    ngOnInit() {\n        this.getLanguages();\n        this.getNationalityMaster();\n        this.pForm = this.cretaePform();\n        this.pForm.valueChanges.subscribe((data)=>{\n            this.logValidationErrors(this.pForm);\n            console.log(this.formErrors)\n        });\n        const controlArray = <FormArray>this.pForm.get('user_languages');\n        this.getData();\n    }\n\n    cretaePform(): FormGroup{\n         return this.fb.group({\n            firstName: ['', [Validators.required, Validators.minLength(5)]],\n            lastName: ['', [Validators.required, Validators.minLength(5)]],\n            mobileNo: ['', [Validators.required, Validators.minLength(10)]],\n            phoneNo: ['',],\n            emailId: [this.globals.email, [Validators.required, Validators.minLength(5), Validators.email]],\n            alterEmailId: ['', [Validators.email]],\n            dob: ['2019-01-01', Validators.required],\n            nationality: [null, [Validators.required]],\n            maritalStatus: [null, [Validators.required]],\n            id: [this.globals.userId, Validators.required],\n            user_languages: this.fb.array([this.addLanguage()]),\n\n        });   \n    }\n\n    logValidationErrors(group: FormGroup): void {\n        Object.keys(group.controls).forEach((key: string) => {\n            const abstarctControl = group.get(key); \n                this.formErrors[key] = '';\n                if (abstarctControl && !abstarctControl.valid  && \n                    abstarctControl.touched || abstarctControl.dirty) {\n                    const messages = this.validationMessages[key];\n                    \n                    for (const errorKey in abstarctControl.errors) {\n                        if (errorKey) {\n                            this.formErrors[key] += messages[errorKey] + ' ';\n                        }\n                    }\n                }\n        });\n    }\n   \n    formErrors = { }\n\n\n    getLanguages() {\n        this.masterDpDn.getLanguages('master_language').subscribe(\n            data => { this.languageMaster = data; },\n            error => { console.log(error); });\n    }\n    getNationalityMaster() {\n        this.masterDpDn.getLanguages('master_nationality').subscribe(\n            data => { this.nationalityMaster = data; },\n            error => { console.log(error); });\n    }\n    addLanguage(): FormGroup {\n        return this.fb.group({\n            userId: [this.globals.userId,Validators.required],\n            languageId: ['null',[Validators.required]],\n            canSpeak: false,\n            canRead: false,\n            canWrite: false,\n        });\n    }\n\n    createCheckBoxes(): FormGroup {\n        return this.fb.group({\n                canSpeak: '',\n                canRead: '',\n                canWrite: ''\n        });\n    }\n    addNewLanguage() {\n        this.languages.push(this.addLanguage());\n    }\n    removeNewLanguage(index) :void{\n       (this.pForm.get('user_languages') as FormArray).removeAt(index);\n    }\n    getData() {\n        this.dataGetService.getPinfoData(this.pForm.value.id).subscribe(\n            data => {\n                console.log(data);\n                this.setPinfoData(data);\n            },\n            error => {\n                console.log(error);\n            });\n    }\n    setPinfoData(data) {\n        // for (let i = 1; i < data.user_languages.length; i++){\n        //     this.languages.push(this.languages);\n        //   }\n        this.pForm.patchValue(data);\n    }\n    submitData() {\n        console.log(this.pForm.value);\n        this.dataSubmitService.submitPersoanlData(this.pForm.value).subscribe(\n            data => {\n                this.setSuccess(data);\n                //this.submitLangData()\n            },\n            error => {\n                console.log(error);\n                this.setError(error)\n            });\n\n        //this.submitLangData();\n    }\n    // submitLangData() {\n    //     console.log(this.pForm.value.user_languages)\n    //     console.log(this.pForm.value);\n    //     this.dataSubmitService.submitLangData(this.pForm.value.user_languages).subscribe(\n    //         data => { this.setSuccess(data) },\n    //         error => {\n    //             console.log(error);\n    //             this.setError(error)\n    //         });\n    // }\n    setSuccess(data) {\n\n        this._utils.openSnackBar(\"Data submitted successfully\",\"OK\");\n        console.log(\"Success\");\n\n        //this.pForm.patchValue(data);\n\n    }\n    setError(data) {\n        console.log(\"Error Occured\" + data.error);\n        this.pForm.setErrors({ invalidLogin: true });\n    }\n\n    validationMessages = {\n        'firstName': {\n            'required': 'First Name is required',\n            'minlength': 'Minumum length is 5 charecters'\n        },\n        'lastName': {\n            'required': 'Last Name is required',\n            'minlength': 'Minumum length is 5 charecters'\n        },\n        'mobileNo': {\n            'required': 'Mobile No is required',\n            'minlength': 'Minumum length is 10 charecters'\n        },\n        'phoneNo': '',\n        'emailId': {\n            'required': 'Email is required',\n            'minlength': 'Minumum length is 5 charecters',\n            'email':'Email id is invalid'\n        },\n        'alterEmailId': {\n            'email':'Email id is invalid'\n        },\n        'dob': {\n            'required': 'DOB is required',\n        },\n        'nationality': {\n            'required': 'Nationality is required'\n        },\n        'maritalStatus': {\n            'required': 'Mariital is required',\n        },\n        'id': {\n            'required': 'User ID is required',\n        }\n\n    };\n    get languages() {\n        return this.pForm.get('user_languages') as FormArray;\n    }\n\n    get firstName() {\n        return this.pForm.get('firstName');\n    }\n    get lastName() {\n        return this.pForm.get('lastName');\n    }\n    get mobileNo() {\n        return this.pForm.get('mobileNo');\n    }\n    get phoneNo() {\n        return this.pForm.get('phoneNo');\n    }\n\n    get emailId() {\n        return this.pForm.get('emailId');\n    }\n    get alterEmailId() {\n        return this.pForm.get('alterEmailId');\n    }\n    get dob() {\n        return this.pForm.get('dob');\n    }\n    get nationality() {\n        return this.pForm.get('nationality');\n    }\n    get maritalStatus() {\n        return this.pForm.get('maritalStatus');\n    }\n    get languageId() {\n        return this.pForm.get('languageId');\n    }\n    format(date: Date, displayFormat: Object): string {\n          if (displayFormat === 'input') {\n            let day: string = date.getDate().toString();\n            day = +day < 10 ? '0' + day : day;\n            let month: string = (date.getMonth() + 1).toString();\n            month = +month < 10 ? '0' + month : month;\n            let year = date.getFullYear();\n            return `${day}-${month}-${year}`;\n          }\n          return date.toDateString();\n        }\n     \n        APP_DATE_FORMATS: MatDateFormats = {\n        parse: {\n          dateInput: { month: 'short', year: 'numeric', day: 'numeric' },\n        },\n        display: {\n          dateInput: 'input',\n          monthYearLabel: { year: 'numeric', month: 'numeric' },\n          dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric'\n          },\n          monthYearA11yLabel: { year: 'numeric', month: 'long' },\n        }\n      };\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ByZS1sb2dpbi9wcmUtbG9naW4uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<navbar-header></navbar-header>\\n    <!-- Login Modal -->\\n    <div class=\\\"modal fade \\\" id=\\\"loginModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\">\\n        <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n            <div class=\\\"modal-content\\\">\\n                <div class=\\\"modal-header\\\">\\n                    <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Login</h5>\\n                    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n                </div>\\n                <div class=\\\"modal-body\\\">\\n                    <div class=\\\"col-sm-12 \\\">\\n                        <loginmodal></loginmodal>\\n                    </div>\\n                </div>\\n                <div class=\\\"modal-footer\\\">\\n                    <!-- <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\">Save changes</button>-->\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <!-- Register Modal -->\\n    <div class=\\\"modal fade \\\" id=\\\"registerModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\">\\n        <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n            <div class=\\\"modal-content\\\">\\n                <div class=\\\"modal-header\\\">\\n                    <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Register</h5>\\n                    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n                </div>\\n                <div class=\\\"modal-body\\\">\\n                    <div class=\\\"col-sm-12 \\\">\\n\\n                        <app-register></app-register>\\n                    </div>\\n                </div>\\n                <div class=\\\"modal-footer\\\">\\n                    <!-- <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\">Save changes</button>-->\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { CheckUserService } from '../check-user.service';\n\n\n@Component({\n  selector: 'pre-login',\n  templateUrl: './pre-login.component.html',\n  styleUrls: ['./pre-login.component.css'],\n    providers: [CheckUserService]\n})\nexport class PreLoginComponent  {\n    recruiterList=\"List of recruiters\";\n    mcq=\"MCQ\"; \n    jobOfferings=\"Job Availability\"\n    posts: any[];\n    recruiters:any [];\n    constructor(private service:CheckUserService){ \n        //this.recruiters=service.getListOfRecruiters();\n        //this.getRecruiters();\n        //this.getPosts();\n    }\n    getPosts =()=>{\n        this.service.getPosts().subscribe(\n        data=>{this.posts=data;},\n            error=>{console.log(\"Server Error : \" + error);}\n        );\n    }\n    getRecruiters =()=>{\n        this.service.getMovies().subscribe(\n        data=>{this.recruiters=data;},\n        error=>{console.log(\"Server Error : \" + error);});\n    }\n    \n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport { AppError } from './common/app-error';\nimport * as basrUrls from './common/service-urls';\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegisterService {\n\n  posts: any[];\n  //baseUrl=\"http://http://100.83.14.249:8000\";\n  baseUrl = basrUrls.baseUrl;\n\n  httpHeaders = new HttpHeaders({ 'Content-Type': 'application/json' });\n  data = [{ \"title\": \"Lion king\" }];\n\n  constructor(private http: HttpClient) { }\n\n  registerUser(userData): Observable<any> {\n\n    return this.http.post(this.baseUrl + '/users/', userData, { headers: this.httpHeaders }).pipe(\n      retry(0),\n      catchError(this.handleError)\n    );\n  }\n\n  login(userData): Observable<any> {\n    return this.http.post(this.baseUrl + '/login/', userData, { headers: this.httpHeaders }).pipe(\n      retry(0),\n      catchError(this.handleError)\n    );\n\n  }\n\n  handleError(error) {\n    console.log(error);\n    let errorMessage: any;\n    if (error.error instanceof ErrorEvent) {\n      errorMessage = `Error: ${error.error.message}`;\n    } else {\n      errorMessage = error.error;\n    }\n    console.log(errorMessage)\n    return throwError(errorMessage);\n  }\n\n\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdGVyL3JlZ2lzdGVyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"card\\\">\\n    <div class=\\\"card-body\\\">\\n        <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"register()\\\">\\n            <div class=\\\"invalid-feedback d-inline \\\" *ngIf=\\\"registerForm.errors\\\">Form has one or more errors</div>\\n            <div *ngFor=\\\"let item of errorData | keyvalue\\\">\\n                <div class=\\\"invalid-feedback d-inline \\\">\\n                    Eroor: {{item.key}} : {{item.value}}\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n                <mat-form-field class=\\\"example-full-width\\\">\\n                    <input matInput required placeholder=\\\"email\\\" id=\\\"email\\\" type=\\\"text\\\" formControlName=\\\"email\\\" />\\n                </mat-form-field>\\n                <div class=\\\"invalid-feedback d-inline\\\" *ngIf=\\\"email.touched && email.invalid\\\">\\n                    {{formErrors.email}}\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group none\\\">\\n                <mat-form-field class=\\\"example-full-width\\\">\\n                    <input matInput required placeholder=\\\"user name\\\" type=\\\"text\\\" formControlName=\\\"username\\\"\\n                        [value]=\\\"email.value\\\" />\\n                </mat-form-field>\\n                <div class=\\\"invalid-feedback d-inline\\\" *ngIf=\\\"username.touched && username.invalid\\\">\\n                    {{formErrors.username}}\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <mat-form-field class=\\\"example-full-width\\\">\\n                    <input matInput required placeholder=\\\"password\\\" type=\\\"password\\\" formControlName=\\\"password\\\" />\\n                </mat-form-field>\\n                <div class=\\\"invalid-feedback d-inline \\\" *ngIf=\\\"password.touched && password.invalid\\\">\\n                    {{formErrors.password}}\\n                </div>\\n\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <mat-form-field class=\\\"example-full-width\\\">\\n                    <input matInput name=\\\"password\\\" placeholder=\\\"confirm password\\\" id=\\\"confirmPassword\\\" type=\\\"password\\\"\\n                        formControlName=\\\"confirmPassword\\\" />\\n                </mat-form-field>\\n                <div class=\\\"invalid-feedback d-inline \\\" *ngIf=\\\"confirmPassword.touched && confirmPassword.invalid\\\">\\n                        {{formErrors.confirmPassword}}\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                    <mat-form-field>\\n                        <mat-label>I am </mat-label>\\n                        <mat-select id='maritalStatus'>\\n                            <mat-option value=\\\"null\\\">I am</mat-option>\\n                            <mat-option value=\\\"1\\\">Candidate</mat-option>\\n                            <mat-option value=\\\"2\\\">Recruiter</mat-option>\\n                            <mat-option value=\\\"3\\\">Consultant</mat-option>\\n                        </mat-select>\\n                    </mat-form-field>\\n                </div>\\n            <div class=\\\"form-group text-center\\\">\\n                <button class=\\\"btn btn-sm btn-primary\\\" style=\\\"float: left\\\"> Let me in </button> &nbsp;\\n            </div>\\n        </form>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl,Validators } from '@angular/forms';\nimport { RegisterService } from '../register.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit  {\n    sucRegister=false;\n    constructor(private registerService:RegisterService){}\n    errorData:any;\n    registerForm = new FormGroup({\n        \"username\": new FormControl('',[Validators.required,Validators.minLength(3)]),\n        \"email\": new FormControl('',[Validators.required,Validators.email]),\n        \"password\": new FormControl('',[Validators.required,Validators.minLength(8)]),\n        \"confirmPassword\": new FormControl('',[Validators.required,Validators.minLength(8)]),\n    });\n    \n    ngOnInit(){\n        this.registerForm.valueChanges.subscribe((data)=>{\n            this.logValidationErrors(this.registerForm);\n            console.log(this.formErrors);\n        });\n    }\n    \n    get username(){\n        return this.registerForm.get('username'); \n    }\n    get email(){\n        return this.registerForm.get('email'); \n    }\n    get password(){\n        return this.registerForm.get('password');\n    }\n    get confirmPassword(){\n        return this.registerForm.get('confirmPassword');\n    }\n    register(){\n        this.logValidationErrors(this.registerForm);\n        if(this.registerForm.valid){\n        console.log(this.registerForm.value);\n        this.registerService.registerUser(this.registerForm.value).subscribe(\n        data=>{this.setSuccess(data)},\n        error=>{console.log(error);this.setError(error)});\n        }else{\n            this.logValidationErrors(this.registerForm);\n        }\n        \n    }\n    setSuccess(data){\n        console.log(data);\n        this.sucRegister=true;\n        alert(\"Registration Successfull, please check your mail\");\n        this.registerForm.reset();\n        this.formErrors=\"\";\n        //this.logValidationErrors(this.registerForm);\n    }\n    setError(data){\n       console.log(\"Error Occured\"+data); \n       this.errorData=data;\n       \n    }\n\n    sucRegisters(){\n        return this.sucRegister;\n    }\n    logValidationErrors(group: FormGroup): void {\n        Object.keys(group.controls).forEach((key: string) => {\n            const abstarctControl = group.get(key); \n                this.formErrors[key] = '';\n                if (abstarctControl && !abstarctControl.valid  &&  abstarctControl.dirty) {\n                    const messages = this.validationMessages[key];\n                    \n                    for (const errorKey in abstarctControl.errors) {\n                        if (errorKey) {\n                            this.formErrors[key] += messages[errorKey] + ' ';\n                        }\n                    }\n                }\n        });\n    }\n\n  \n    validationMessages = {\n        'username': {\n            'required': 'User Name is required',\n            'minlength': 'Minumum length is 5 charecters'\n        },\n        'email': {\n            'required': 'Email is required',\n            'email':'Email id is invalid'\n        },\n        'password': {\n            'required': 'Password is required',\n            'minlength': 'Minumum length is 8 charecters'\n        },\n        'confirmPassword': {\n            'required': 'Confirm Password is required',\n            'minlength': 'Minumum length is 8 charecters'\n        },\n\n    };\n    formErrors = { }\n    \n    }","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}